{"version":3,"sources":["Assets/icons/logo.svg","Data/AppElements.js","Context/AppContext.js","Helpers/IconHelper.js","Components/AppDrawer/AppDrawerContent.jsx","Components/AppDrawer/AppDrawer.jsx","Components/Theme/ThemeHelper.js","Components/PageSwitchHelper/PageSwitchHelper.jsx","HOC/Wrapper.jsx","Components/AppShell/AppShell.jsx","Components/Card/Card.jsx","Api/Covid19India.js","Components/IndiaCovidMap/Gradient.jsx","Components/IndiaCovidMap/IndiaCovidMap.jsx","Components/Dashboard/DashboardSection.jsx","Components/Theme/LineChartThemeHelper.js","Helpers/Debounce.js","Helpers/WindowDimensionHelper.js","Components/Common Components/LineChart.jsx","Components/Common Components/SingleStateSelector.jsx","Components/Dashboard/TimeSeriesGraph.jsx","Components/Common Components/SimpleDataTable.jsx","Components/Dashboard/DashboardStatTable.jsx","Components/Common Components/ExpandableTable.jsx","Api/ISI_StatisticalData.js","Components/Dashboard/Dashboard.jsx","Components/WeeklyIncrease/WeeklyIncreaseAnalysis/WeeklyIncreaseDataTable.jsx","Components/WeeklyIncrease/WeekFooter.jsx","Components/WeeklyIncrease/WeeklyIncreaseAnalysis/WeeklyIncreaseRatioTable.jsx","Components/WeeklyIncrease/WeeklyIncreaseAnalysis/WeeklyIncreaseAnalysis.jsx","Components/Common Components/StateSelector.jsx","Components/Theme/ChartColors.js","Components/Theme/BarChartThemeHelper.js","Components/Common Components/BarChart.jsx","Components/WeeklyIncrease/WeeklyIncreaseGraph.jsx","Components/WeeklyIncrease/WeeklyIncrease.jsx","Components/RecoveryRate/RecoveryRateDataTable.jsx","Components/RecoveryRate/RecoveryRateGraph.jsx","Components/RecoveryRate/RecoveryRate.jsx","Components/Common Components/DataTable.jsx","Components/TrafficIntensity/TrafficIntensityGraph.jsx","Components/TrafficIntensity/TrafficIntensity.jsx","Components/Concentration/ConcentrationDataTable.jsx","Components/Concentration/ConcentrationGraph.jsx","Components/Concentration/Concentration.jsx","Components/DeathRate/DeathRateDataTable.jsx","Components/DeathRate/DeathRateGraph.jsx","Components/DeathRate/DeathRate.jsx","Components/TestedPositive/TestedPostiveGraph.jsx","Components/TestedPositive/TestedPositive.jsx","Components/FAQ/FAQ.jsx","Components/About/AboutCard.jsx","Components/About/AboutPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","sidebarOptions","id","name","icon","AppContext","createContext","AppContextProvider","props","useState","theme","localStorage","getItem","currentPage","appState","setAppState","Provider","value","children","getIcon","val","useStyles","makeStyles","mainIcon","height","padding","toolbar","textAlign","getListItem","item","ListItem","selected","button","key","onClick","optionSelectedHandler","ListItemIcon","ListItemText","primary","style","color","green","DrawerContent","classes","className","src","logo","alt","Divider","List","options","map","index","length","Fragment","root","display","textMargin","marginTop","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","drawerPaper","boxShadow","drawerPaperDark","backgroundColor","content","flexGrow","headerIcon","ResponsiveDrawer","window","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","appDrawerProps","curTheme","appDrawerPropsMobile","container","undefined","document","body","navBarClasses","AppBar","position","Toolbar","IconButton","aria-label","edge","fontSize","Grid","justify","Typography","variant","noWrap","themeToggleHandler","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","themeColors","light","secondary","dark","themeHelper","createMuiTheme","palette","main","type","PageSwitchHelper","pageId","WeeklyIncrease","RecoveryRate","TrafficIntensity","Concentration","TestedPositive","DeathRate","FAQ","Wrapper","AppShell","useContext","useEffect","ThemeProvider","ThemeHelper","setItem","page","customCard","transition","margin","down","minWidth","confirmed","borderBottom","active","recovered","death","iconStyle","top","CustomCard","Card","cx","cardType","CardContent","gutterBottom","title","start","end","duration","separator","valueChange","Math","abs","CardActions","disableSpacing","Button","size","startIcon","url","fetchSummary","a","axios","get","response","console","error","fetchStateDistrictData","fetchTimeSeriesData","Gradient","min","float","max","backgroundImage","colors","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","pressed","colorMap","IndiaCovidMap","tooltipContent","setTooltipContent","data","heatMapData","setData","onMouseEnter","geo","current","properties","getColor","maxCount","perColorRange","finalColor","trunc","onMouseLeave","projectionConfig","projection","data-tip","geography","geographies","find","s","rsmKey","customPanel","heading","typography","pxToRem","flexBasis","secondaryHeading","text","dynamicMargin","DashboardSection","expansionPanelDetailsProps","panelname","ExpansionPanel","TransitionProps","unmountOnExit","expanded","onChange","handleChangeExpanded","panelName","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","LineChartThemeHelper","chart","tools","download","dataLabels","enabled","xaxis","labels","datetimeUTC","categories","legend","itemMargin","vertical","foreColor","tooltip","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","log","addEventListener","removeEventListener","getRealWidth","LineChart","series","totalConfirmedArray","totalActiveArray","totalRecoveredArray","totalDeceasedArray","dateArray","chartData","setChartData","StateSelector","Autocomplete","disableClearable","states","getOptionLabel","option","e","handleStateChange","defaultValue","defaultState","renderInput","params","TextField","placeholder","formatChartsData","timeSeriesMap","state","totalTestedArray","Object","keys","forEach","curData","total","deceased","tested","push","init","TimeSeriesGraph","chartsData","setChartsData","timeSeriesData","setTimeSeriesData","responseData","StateMap","singleSelect","selectedState","handleChange","LinearProgress","StyledTableCell","withStyles","head","common","black","white","TableCell","StyledTableRow","action","TableRow","SimpleDataTable","headers","TableContainer","component","Paper","Table","TableHead","align","TableBody","scope","values","DashboardStatTable","stateData","getOptions","selectedOption","setSelectedOption","tableData","setTableData","tabdata","countryData","trim","useRowStyles","clickableRow","cursor","dynamicPadding","info","verticalAlign","useStylesBootstrap","arrow","maxWidth","Row","setOpen","tooltipClasses","districtData","districts","statenotes","Tooltip","parse","placement","deaths","paddingBottom","paddingTop","colSpan","elevation","Collapse","in","district","CollapsibleTable","statecode","baseUrl","statData","fetchDashboardData","fetchDownloadableReports","fetchWeeklyIncreaseData","fetchRecoveryRateData","fetchTrafficIntensityData","fetchConcentrationData","fetchTestedPositiveData","fetchDeathRateData","fetchFAQData","marginT20","marginB20","marginBottom","formatHeatMapData","statewiseArray","activeHeatMapData","confirmedHeatMapData","deathsHeatMapData","maxActive","maxConfirmed","maxDeaths","i","activeData","confirmedData","deathsActive","Dashboard","heatMapOptions","cardsData","setCardsData","dashboardData","setDashboardData","setHeatMapData","setExpanded","mapOption","setMapOption","stateTableData","setStateTableData","districtTableData","setDistrictTableData","downloadableReportsData","setDownloadableReportsData","panel","event","isExpanded","statewise","confirmedProps","deltaconfirmed","activeProps","recoveredProps","deltarecovered","deathProps","deltadeaths","messages","mainHeading","subHeading","India","alignItems","sm","md","timeSeriesGraph","chartSubText","heatMap","FormControl","Select","labelId","target","MenuItem","stateDistrictData","analysis","riskSummary","riskReport","handleFileRedirect","fileURL","fileName","table","WeeklyIncreaseDataTable","WeeklyData","weeklyData","startDate","endDate","stateName","weeklyItem","rank","WeekFooter","lineHeight","WeeklyIncreaseRatioTable","footers","ratios","TabPanel","other","role","hidden","aria-labelledby","a11yProps","allyProps","customSelect","background","WeeklyIncreaseAnalysis","setValue","Tabs","centered","newValue","Tab","label","multiple","defaultStates","barChartThemeHelper","plotOptions","bar","horizontal","columnWidth","endingShape","distributed","stroke","show","yaxis","opacity","hideLegend","BarChart","seriesData","WeeklyGraph","stateNameArray","currentSeriesData","ratioArray","ratio","stateNames","sort","getFormattedData","filterChartData","selectedStateArray","filteredData","Box","p","setWeeklyData","RecoveryRateDataTable","recoveryRate","whiteSpace","date","countryName","rate","recoveryItem","RecoveryRateGraph","RecoveryData","rateArray","countryRateArray","recoveryData","setRecoveryData","DataTable","category","headerRange","headerCategory1","headerCategory2","headerCategory","itemCategory","TrafficIntensityGraph","TrafficIntensityData","intensityArray","trafficIntensity","countryIntensityArray","trafficIntensityData","setTrafficIntensityData","ConcentrationDataTable","concentration","ConcentrationGraph","ConcentrationData","currentStates","stateMap","concentrationArray","allStates","slice","concentrationData","setConcentrationData","DeathRateDataTable","deathRate","deathItem","DeathRateGraph","DeathRateData","deathRateData","setDeathRateData","TestedPositiveData","testDataArray","testData","percPositive","testedPositiveData","setTestedPositiveData","questionContainer","flexWrap","answerContainer","Faq","faqData","setFaqData","question","answer","paddingRight","paddingLeft","alignSelf","avatar","rightContent","buttonContainer","openLink","sameTab","location","AboutCard","xs","Avatar","currentRole","linkedIn","LinkedIn","github","GitHub","email","Email","detailsContainer","AboutPage","contributors","Contributors","analytics","team","dev","Link","href","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.19db175d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c0ff89b4.svg\";","export const sidebarOptions = [\r\n    {id:1,name:\"Dashboard\",icon:\"dashboard\"},\r\n    {id:2,name:\"Weekly Increase\",icon:\"increase\"},\r\n    {id:3,name:\"Recovery Rate\",icon:\"recovery\"},\r\n    {id:4,name:\"Traffic Intensity\",icon:\"intensity\"},\r\n    {id:5,name:\"Spread\",icon:\"concentration\"},\r\n    {id:6,name:\"Tested Positive\",icon:\"positive\"},\r\n    {id:7,name:\"Death Rate\",icon:\"death\"},\r\n    {id:8,name:\"FAQ\",icon:\"faq\"},\r\n    {id:9,name:\"About\",icon:\"about\"}\r\n];\r\n","import React,{useState,createContext} from 'react';\r\nimport { sidebarOptions } from \"../Data/AppElements\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = (props) => {\r\n    const light = \"light\";//default app theme\r\n    const [appState, setAppState] = useState({\r\n        theme: localStorage.getItem('theme') || light,\r\n        currentPage: sidebarOptions[0]\r\n    });\r\n    return (\r\n        <AppContext.Provider value={[appState,setAppState]}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n}","import React from 'react';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport RecoveryIcon from '@material-ui/icons/VerifiedUser';\r\nimport ConcentrationIcon from '@material-ui/icons/BubbleChart';\r\nimport HospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport CityIcon from '@material-ui/icons/EmojiTransportation';\r\nimport DeathIcon from '@material-ui/icons/Warning';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AboutIcon from '@material-ui/icons/Info';\r\nimport IntensityIcon from '@material-ui/icons/GraphicEq';\r\nimport FAQIcon from '@material-ui/icons/ContactSupport';\r\n/* Helper method to get icon based on icon name and optional props */\r\nexport const getIcon = (val, props) => {\r\n    switch (val) {\r\n        case 'dashboard':\r\n            return <DashboardIcon {...props}></DashboardIcon>;\r\n        case 'increase':\r\n            return <TrendingUpIcon {...props}></TrendingUpIcon>;\r\n        case 'recovery':\r\n            return <RecoveryIcon {...props}></RecoveryIcon>;\r\n        case 'intensity':\r\n            return <IntensityIcon {...props}></IntensityIcon>;\r\n        case 'concentration':\r\n            return <ConcentrationIcon {...props}></ConcentrationIcon>\r\n        case 'positive':\r\n            return <HospitalIcon {...props}></HospitalIcon>;\r\n        case 'city':\r\n            return <CityIcon {...props}></CityIcon>;\r\n        case 'about':\r\n            return <AboutIcon {...props}></AboutIcon>;\r\n        case 'death':\r\n            return <DeathIcon {...props}></DeathIcon>;\r\n        case 'faq':\r\n            return <FAQIcon {...props}></FAQIcon>\r\n        default:\r\n            return <TrendingUpIcon {...props}></TrendingUpIcon>;\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getIcon } from '../../Helpers/IconHelper';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { logo } from '../../Assets';\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainIcon: {\r\n        height: '13rem',\r\n        padding: '2rem'\r\n    },\r\n    toolbar: {\r\n        textAlign: 'center'\r\n    }\r\n}));\r\nconst getListItem = (props, item) => {\r\n    if (item.id === props.currentPage.id) {\r\n        return (\r\n            <ListItem selected button key={item.id} onClick={() => props.optionSelectedHandler(item)}>\r\n                <ListItemIcon >{getIcon(item.icon)}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n            </ListItem>);\r\n    } else {\r\n        return (\r\n            <ListItem button key={item.id} onClick={() => props.optionSelectedHandler(item)}>\r\n                <ListItemIcon style={{ color: green[300] }}>{getIcon(item.icon)}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n            </ListItem>);\r\n    }\r\n}\r\nconst DrawerContent = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.toolbar}>               \r\n                    <img className={classes.mainIcon} src={logo} alt=\"mainIcon\"></img> \r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {props.options.map((item, index) => (\r\n                    index === props.options.length - 1 ?\r\n                        <React.Fragment key=\"fragment\">\r\n                            <Divider key=\"divider\"/>\r\n                            {getListItem(props, item)}\r\n                        </React.Fragment>\r\n                        :\r\n                        getListItem(props, item)\r\n\r\n                ))}\r\n            </List>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrawerContent;","import React from 'react';\r\nimport { AppBar, Drawer, Hidden, Toolbar, IconButton, Grid } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Light from '@material-ui/icons/Brightness7';\r\nimport Dark from '@material-ui/icons/Brightness4';\r\nimport Content from './AppDrawerContent';\r\nimport { getIcon } from '../../Helpers/IconHelper';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst drawerWidth = 242;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  textMargin: {\r\n    marginTop: 7\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    zIndex: 1101\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  drawerPaperDark:{\r\n    backgroundColor:'#333',\r\n    width: drawerWidth,\r\n    boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  headerIcon:{\r\n    marginRight:10,\r\n    color: green[300] \r\n  }\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  //user triggered events\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const handleOptionSelectedMobile = (item) =>{\r\n    handleDrawerToggle();\r\n    props.optionSelectedHandler(item);\r\n  };  \r\n\r\n  //Props to be sent to app drawer\r\n  const appDrawerProps = {\r\n    currentPage: props.currentPage, options: props.options,\r\n    optionSelectedHandler: props.optionSelectedHandler, curTheme: props.curTheme\r\n  };\r\n  const appDrawerPropsMobile = {\r\n    ...appDrawerProps,\r\n    optionSelectedHandler:handleOptionSelectedMobile\r\n  };\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n  const navBarClasses = props.curTheme === \"light\" ? classes.drawerPaper:classes.drawerPaperDark;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\r\n            onClick={handleDrawerToggle} className={classes.menuButton}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {getIcon(props.currentPage.icon,{className:classes.headerIcon,fontSize:\"large\"})}\r\n          <Grid justify=\"space-between\" container >            \r\n            <Grid item >\r\n              <Typography variant=\"h6\" noWrap className={classes.textMargin}>\r\n                {props.currentPage.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <div>\r\n                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Toggle Dark and Light mode\"\r\n                  onClick={() => props.themeToggleHandler()}>\r\n                  {props.curTheme === \"light\" ? <Light /> : <Dark />}\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: navBarClasses,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Content {...appDrawerPropsMobile}></Content>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: navBarClasses,\r\n            }}            \r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            <Content {...appDrawerProps}></Content>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nexport const themeColors =\r\n{\r\n  light: { primary: \"#FFFFFF\", secondary: '#81c784' },\r\n  dark: { primary: \"#333\", secondary: '#81c784' }\r\n};\r\nconst themeHelper = (theme) => {\r\n  if (theme === \"light\") {\r\n    return createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: themeColors.light.primary\r\n        },\r\n        secondary: {\r\n          main: themeColors.light.secondary\r\n        },\r\n        type: \"light\"\r\n      }\r\n    });\r\n  } else {\r\n    return createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: themeColors.dark.primary\r\n        },\r\n        secondary: {\r\n          main:  themeColors.dark.secondary\r\n        },\r\n        type: \"dark\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default themeHelper;","import React from 'react';\r\nimport { WeeklyIncrease, RecoveryRate, TrafficIntensity, Concentration, DeathRate, TestedPositive, Dashboard,FAQ,AboutPage } from '../index';\r\n\r\nconst PageSwitchHelper = (props) => {\r\n    switch (props.pageId) {\r\n        case 1:\r\n            return <Dashboard theme={props.theme}></Dashboard>\r\n        case 2:\r\n            return <WeeklyIncrease theme={props.theme}></WeeklyIncrease>;\r\n        case 3:\r\n            return <RecoveryRate theme={props.theme}></RecoveryRate>;\r\n        case 4:\r\n            return <TrafficIntensity theme={props.theme}></TrafficIntensity>;\r\n        case 5:\r\n            return <Concentration theme={props.theme}></Concentration>;\r\n        case 6:\r\n            return <TestedPositive theme={props.theme}></TestedPositive>\r\n        case 7:\r\n            return <DeathRate theme={props.theme}></DeathRate>;\r\n        case 8:\r\n            return <FAQ theme={props.theme}></FAQ>\r\n        case 9:\r\n            return <AboutPage theme={props.theme}></AboutPage>\r\n        default:\r\n            return <h1>Not configured</h1>\r\n    }\r\n}\r\n\r\nexport default PageSwitchHelper;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 242;\r\nconst appBarHeight = 64;\r\nconst appBarHeightMobile = 56;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up('md')]: {\r\n      marginLeft: drawerWidth\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginTop: appBarHeight\r\n    },\r\n    marginTop: appBarHeightMobile,\r\n\r\n    background: theme.palette.primary.main\r\n  },\r\n  content: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(3)\r\n    },    \r\n    padding: theme.spacing(1)    \r\n  },\r\n}));\r\n\r\nfunction Wrapper(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <main className={classes.content}>\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useContext } from \"react\";\r\nimport { sidebarOptions } from \"../../Data/AppElements\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport ResponsiveAppDrawer from '../AppDrawer/AppDrawer';\r\nimport ThemeHelper, { themeColors } from '../Theme/ThemeHelper';\r\nimport PageSwitchHelper from '../PageSwitchHelper/PageSwitchHelper';\r\nimport Wrapper from '../../HOC/Wrapper';\r\nimport {AppContext} from '../../Context/AppContext';\r\nimport { useEffect } from \"react\";\r\n\r\nconst light = \"light\", dark = \"dark\";\r\n\r\nconst AppShell = () => {\r\n  const [appState, setAppState] = useContext(AppContext);\r\n\r\n  const setCurrentpage = (page) => {\r\n    //updating state only if selected page is different\r\n    if (page.id !== appState.currentPage.id)\r\n      setAppState({ theme: appState.theme, currentPage: page });\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (appState.theme === light) {\r\n      setAppState({ theme: dark, currentPage: appState.currentPage });\r\n      document.body.style.backgroundColor = themeColors.dark.primary;\r\n      localStorage.setItem('theme', dark);\r\n    } else {\r\n      setAppState({ theme: light, currentPage: appState.currentPage });\r\n      document.body.style.backgroundColor = themeColors.light.primary;\r\n      localStorage.setItem('theme', light);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = themeColors[appState.theme].primary;\r\n  }, [appState.theme]);\r\n\r\n  return (\r\n    <ThemeProvider theme={ThemeHelper(appState.theme)}>\r\n      <ResponsiveAppDrawer options={sidebarOptions} curTheme={appState.theme} currentPage={appState.currentPage}\r\n        themeToggleHandler={() => toggleTheme()} optionSelectedHandler={(val) => setCurrentpage(val)}></ResponsiveAppDrawer>\r\n      <Wrapper>\r\n        <PageSwitchHelper pageId={appState.currentPage.id} theme={appState.theme}></PageSwitchHelper>\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n\r\n}\r\n\r\nexport default AppShell;\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from '../../Context/AppContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Typography, CardActions, Button } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport cx from 'classnames';\r\nimport CountUp from 'react-countup';\r\nimport { getIcon } from '../../Helpers/IconHelper';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { sidebarOptions } from '../../Data/AppElements';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    textAlign: 'center'\r\n  },\r\n  customCard: {\r\n    transition: 'box-shadow .3s',\r\n    margin: '0.5em',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '46%',\r\n      minWidth: '46%'\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '95%',\r\n      minWidth: '95%'\r\n    },\r\n    width: '23%',\r\n    minWidth: '23%',\r\n    cursor: 'default',\r\n    '&:hover': {\r\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.3),0px 4px 5px 0px rgba(0,0,0,0.24),0px 1px 10px 0px rgba(0,0,0,0.22)'\r\n    }\r\n  },\r\n  confirmed: {\r\n    borderBottom: '10px solid #368bf6'\r\n  },\r\n  active: {\r\n    borderBottom: '10px solid #f2a365'\r\n  },\r\n  recovered: {\r\n    borderBottom: '10px solid #81c784'\r\n  },\r\n  death: {\r\n    borderBottom: '10px solid #eb5569'\r\n  },\r\n  iconStyle: {\r\n    fontSize: '1rem',\r\n    top: '.125em',\r\n    position: 'relative'\r\n  },\r\n\r\n}));\r\n\r\nconst CustomCard = (props) => {\r\n  const classes = useStyles();\r\n  const [appState, setAppState] = useContext(AppContext);\r\n  const displayPage = () => {\r\n    setAppState({ theme: appState.theme, currentPage: sidebarOptions[props.pageId] });\r\n  };\r\n\r\n  return (\r\n    <Card className={cx(classes.customCard, classes[props.cardType])}>\r\n      <CardContent className={classes.content}>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"h4\">\r\n          <CountUp start={0} end={+props.value} duration={1} separator=\",\" />\r\n        </Typography>\r\n        <Typography color=\"inherit\">\r\n          {props.valueChange > 0 ?\r\n            <ArrowUpwardIcon className={classes.iconStyle}></ArrowUpwardIcon> :\r\n            props.valueChange < 0 ?\r\n              <ArrowDownwardIcon className={classes.iconStyle}></ArrowDownwardIcon> : null}\r\n          {props.valueChange ? Math.abs(props.valueChange) : null}\r\n        </Typography>\r\n        {/*div for padding*/}\r\n        {props.valueChange ? null : <div style={{ height: \"24px\" }}></div>}\r\n      </CardContent>\r\n      {sidebarOptions[props.pageId] ?\r\n        <CardActions disableSpacing>\r\n          <Button size=\"small\"\r\n            onClick={() => displayPage()} startIcon={getIcon(sidebarOptions[props.pageId].icon, { style: { color: green[300] } })}>\r\n            {sidebarOptions[props.pageId].name}\r\n          </Button>\r\n        </CardActions> : null}\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomCard.propTypes = {\r\n  pageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CustomCard;","import axios from 'axios';\r\nconst url = 'https://api.covid19india.org';\r\n\r\nexport const fetchSummary = async () => {\r\n    try{\r\n        const response = await axios.get(`${url}/data.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchSummary] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchStateDistrictData = async () => {\r\n    try{\r\n        const response = await axios.get(`${url}/state_district_wise.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchStateDistrictData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchTimeSeriesData = async () => {\r\n    try{\r\n        const response = await axios.get(`${url}/v3/min/timeseries.min.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchTimeSeriesData] Failed\");\r\n    }    \r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gradient = (props) => (\r\n    <React.Fragment>\r\n        <div> \r\n            <span>{props.min}</span>            \r\n            <span style={{float:'right'}}>{props.max}</span>\r\n        </div>\r\n        <div style={{ backgroundImage: `linear-gradient(to right, ${[...props.colors]})`, height: '25px', width: '100%', marginTop: '20px' }}></div>\r\n    </React.Fragment>\r\n);\r\n\r\nGradient.propTypes = {\r\n    colors: PropTypes.array.isRequired\r\n};\r\nexport default Gradient;","import React, { useState, useEffect } from 'react';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Gradient from './Gradient';\r\n/**\r\n* Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\r\n*/\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\nconst PROJECTION_CONFIG = {\r\n  scale: 900,\r\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  \"#FFE6E6\", \"#FFCCCC\", \"#FFB3B3\", \"#FF9999\", \"#FF8080\",\r\n  \"#FF6666\", \"#FF4D4D\", \"#FF3333\", \"#FF1A1A\", \"#FF0000\",\r\n  \"#E60000\", \"#CC0000\", \"#B30000\", \"#990000\", \"#800000\", \r\n  \"#660000\",\"#4C0000\", \"#330000\", \"#190000\", \"#000000\"\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: 'none'\r\n  },\r\n  hover: {\r\n    fill: '#ccc',\r\n    transition: 'all 250ms',\r\n    outline: 'none'\r\n  },\r\n  pressed: {\r\n    outline: 'none'\r\n  }\r\n};\r\n\r\nlet colorMap = {};\r\nfunction IndiaCovidMap(props) {\r\n  const [tooltipContent, setTooltipContent] = useState('');\r\n  const [data, setData] = useState(props.data.heatMapData);\r\n\r\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n    return () => {\r\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n    };\r\n  };\r\n  \r\n  const getColor=(value,maxCount)=>{\r\n    //console.log(colorMap[value]);\r\n    if(colorMap[value]){\r\n      //if color is already calculated once , no need to recalculate\r\n      return colorMap[value];\r\n    }\r\n    const perColorRange = maxCount/COLOR_RANGE.length;    \r\n    const finalColor = COLOR_RANGE[Math.trunc(value/perColorRange)];\r\n    colorMap[value] = finalColor;\r\n    //console.log(\"Value : \"+value+\" Max : \"+maxCount+\"final Color:\"+finalColor);\r\n    return finalColor;\r\n  }\r\n  const onMouseLeave = () => {\r\n    setTooltipContent('');\r\n  };\r\n  useEffect(() => {\r\n    colorMap = {};\r\n    setData(props.data.heatMapData);\r\n  },[props.data]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n      <ComposableMap\r\n        projectionConfig={PROJECTION_CONFIG}\r\n        projection=\"geoMercator\"\r\n        width={600}\r\n        height={500}\r\n        data-tip=\"\"\r\n      >\r\n        <Geographies geography={INDIA_TOPO_JSON}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              //console.log(geo.id);\r\n              const current = data.find(s => s.id === geo.id);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={current ? getColor(current.value,props.data.max) : DEFAULT_COLOR}\r\n                  style={geographyStyle}\r\n                  onMouseEnter={onMouseEnter(geo, current)}\r\n                  onMouseLeave={onMouseLeave}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n      <Gradient colors={COLOR_RANGE} min={0} max={props.data.max} ></Gradient>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default IndiaCovidMap;\r\n","import React from 'react';\r\nimport {\r\n    ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Typography\r\n} from '@material-ui/core';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nconst useStyles = makeStyles((theme) => ({\r\n    customPanel: {\r\n        display: 'block'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexBasis: '90%',\r\n        },\r\n        flexBasis: '45%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display:'none'\r\n        },\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n        marginLeft: 20\r\n    },\r\n    dynamicMargin: {\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: theme.spacing(1)\r\n        }\r\n    }\r\n}));\r\nconst DashboardSection = (props) => {\r\n    const classes = useStyles();\r\n    const expansionPanelDetailsProps = props.panelname === 'panel3' ? \r\n    { className: cx(classes.customPanel, classes.dynamicMargin) } : \r\n    { className: classes.customPanel };\r\n    return (\r\n        <ExpansionPanel TransitionProps={{ unmountOnExit: true }} expanded={props.expanded}\r\n            onChange={props.handleChangeExpanded(props.panelName)}>\r\n            <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls={`${props.panelName}bh-content`}\r\n                id={`${props.panelName}bh-header`}>\r\n                <Typography className={classes.heading}>{props.heading}</Typography>\r\n                {props.expanded ? null : <Typography className={classes.secondaryHeading}>Tap to expand</Typography>}\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails {...expansionPanelDetailsProps}>\r\n                {props.children}\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n    );\r\n}\r\n\r\nexport default DashboardSection;","const LineChartThemeHelper = (data) => {\r\n    let options = {\r\n        chart: {\r\n            height: 350,\r\n            type: 'line',\r\n            toolbar: {\r\n                tools: {\r\n                    download: false\r\n                }\r\n            }\r\n        },\r\n        colors: ['#368bf6','#f2a365', '#81c784', '#eb5569'],\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n            labels: {\r\n                datetimeUTC: false\r\n            },\r\n            categories: data.categories\r\n        },\r\n        legend: {\r\n            itemMargin: {\r\n                vertical: 10\r\n            }\r\n        }\r\n    }\r\n    if (data.theme !== \"light\") {\r\n        options.chart.foreColor = '#FFFFFF';\r\n    } else {\r\n        options.chart.foreColor = '#373d3f';\r\n    }\r\n    options.tooltip = { theme: data.theme };\r\n    return options;\r\n};\r\n\r\nexport default LineChartThemeHelper;\r\n","const debounce = (func, wait, immediate) => {\r\n    var timeout;\r\n    return function() {\r\n        var context = this, args = arguments;\r\n        var later = function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    }\r\n}\r\n\r\nexport default debounce;","import { useState, useEffect } from 'react';\r\nimport debounce from './Debounce';\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    const handleResize = debounce(function() {\r\n      console.log(\"window resized\");\r\n      setWindowDimensions(getWindowDimensions());\r\n    },200);\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport LineChartThemeHelper from '../Theme/LineChartThemeHelper';\r\nimport useWindowDimensions from '../../Helpers/WindowDimensionHelper';\r\n\r\nconst LineChart = (props) => {\r\n    const { height, width } = useWindowDimensions();\r\n    const [chartData, setChartData] = useState({\r\n        series: [{\r\n            name: 'Confirmed',\r\n            data: props.data.totalConfirmedArray\r\n        },\r\n        {\r\n            name: 'Active',\r\n            data: props.data.totalActiveArray\r\n        },\r\n        {\r\n            name: 'Recovery',\r\n            data: props.data.totalRecoveredArray\r\n        },\r\n        {\r\n            name: 'Deceased',\r\n            data: props.data.totalDeceasedArray\r\n        }],\r\n        options: LineChartThemeHelper({\r\n            categories: props.data.dateArray,            \r\n            theme: props.theme\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(\"[BarChart] useEffect called\");\r\n        setChartData({ \r\n            series: [{\r\n                name: 'Confirmed',\r\n                data: props.data.totalConfirmedArray\r\n            },\r\n            {\r\n                name: 'Active',\r\n                data: props.data.totalActiveArray\r\n            },\r\n            {\r\n                name: 'Recovery',\r\n                data: props.data.totalRecoveredArray\r\n            },\r\n            {\r\n                name: 'Deceased',\r\n                data: props.data.totalDeceasedArray\r\n            }],           \r\n            options: LineChartThemeHelper({\r\n                categories: props.data.dateArray,            \r\n                theme: props.theme\r\n            })\r\n        });\r\n    }, [props]);\r\n    \r\n\r\n    return <ReactApexChart style={{ marginTop: \"9px\", marginLeft: \"-5px\" }} width={getRealWidth(width)}\r\n        height={0.65 * height} options={chartData.options} series={chartData.series} type=\"line\" />\r\n}\r\nconst getRealWidth = (width) => {\r\n    if (width > 650 && width < 960) {\r\n        return width - 90;\r\n    } else if (width >= 960) {\r\n        return width - 330;\r\n    } else {\r\n        return width - 50;\r\n    }\r\n}\r\nexport default LineChart;","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StateSelector(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        disableClearable\r\n        id=\"single-state-selector\"\r\n        options={props.states}\r\n        getOptionLabel={(option) => option}\r\n        onChange={(e, value) => props.handleStateChange(value)}\r\n        defaultValue={props.defaultState}\r\n        renderInput={(params) => (\r\n          <TextField {...params} color=\"secondary\" variant=\"outlined\" placeholder=\"Select State..\" />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport LineChart from '../Common Components/LineChart';\r\nimport { fetchTimeSeriesData } from '../../Api/Covid19India';\r\nimport StateSelector from '../Common Components/SingleStateSelector';\r\nimport StateMap from '../../Data/StateMap.json';\r\nimport {LinearProgress} from '@material-ui/core';\r\n\r\nconst formatChartsData = (timeSeriesMap, state) => {\r\n    const data = timeSeriesMap[state];\r\n\r\n    let totalConfirmedArray = [], totalDeceasedArray = [], totalRecoveredArray = [], totalActiveArray = [], dateArray = [], totalTestedArray = [];\r\n\r\n    if (data) {\r\n        dateArray = Object.keys(data);\r\n        if (dateArray && dateArray.length) {\r\n            dateArray.forEach((item) => {\r\n                const curData = data[item];\r\n                if (curData && curData.total) {\r\n                    const confirmed = curData.total.confirmed ? curData.total.confirmed : 0;\r\n                    const deceased = curData.total.deceased ? curData.total.deceased : 0;\r\n                    const recovered = curData.total.recovered ? curData.total.recovered : 0;\r\n                    const active = confirmed - (deceased + recovered);\r\n                    const tested = curData.total.tested ? curData.total.tested : 0;\r\n                    totalConfirmedArray.push(confirmed);\r\n                    totalDeceasedArray.push(deceased);\r\n                    totalRecoveredArray.push(recovered);\r\n                    totalActiveArray.push(active);\r\n                    totalTestedArray.push(tested);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return { init: true, totalConfirmedArray, totalDeceasedArray, totalRecoveredArray, totalActiveArray, totalTestedArray, dateArray };\r\n}\r\n\r\nconst TimeSeriesGraph = (props) => {\r\n    const [chartsData, setChartsData] = useState({});\r\n    const [timeSeriesData, setTimeSeriesData] = useState(null);\r\n    const defaultSelection = \"TT\";\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchTimeSeriesData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setTimeSeriesData(responseData.data);\r\n            setChartsData(formatChartsData(responseData.data, defaultSelection));\r\n        })();\r\n    }, []);\r\n    const handleChange = (selectedState) => {\r\n        setChartsData(formatChartsData(timeSeriesData, StateMap[selectedState]));\r\n    }\r\n    const options = Object.keys(StateMap);\r\n    return (\r\n        chartsData && chartsData.init ?\r\n            <React.Fragment>\r\n                <StateSelector\r\n                    style={{ marginTop: 10 }}\r\n                    defaultState={options[0]}\r\n                    states={options}\r\n                    singleSelect={true}\r\n                    handleStateChange={(selectedState) => handleChange(selectedState)}></StateSelector>\r\n                <LineChart data={chartsData} theme={props.theme}></LineChart>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}\r\n\r\nexport default TimeSeriesGraph;","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function SimpleDataTable(props) {  \r\n  const { headers, data } = { ...props.data };\r\n  return (\r\n    <TableContainer style={{marginTop:15}} component={Paper}>\r\n      <Table aria-label=\"Custom Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {headers.map((item, index) => {              \r\n                return <StyledTableCell align=\"center\" key={index}>{item}</StyledTableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>        \r\n          {data.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.name}\r\n              </StyledTableCell>\r\n              {item.values.map((item, index) => (\r\n                <StyledTableCell align=\"center\" key={index}>\r\n                  {item ? item : \"N/A\"}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport DashboardTable from '../Common Components/SimpleDataTable';\r\nimport StateSelector from '../Common Components/SingleStateSelector';\r\n\r\nconst getOptions = (props) => {\r\n    const options = Object.keys(props.data.content.stateData)\r\n    return [\"India\", ...options];\r\n}\r\n\r\nconst DashboardStatTable = (props) => {\r\n    const options = getOptions(props);\r\n    const [selectedOption, setSelectedOption] = useState(options[0]);\r\n    const [tableData,setTableData] = useState(null);\r\n    const handleChange = (value) => {\r\n        if(value && value.trim().length > 0)\r\n            setSelectedOption(value);\r\n        else\r\n            setSelectedOption(options[0]);\r\n    };\r\n    useEffect(()=>{\r\n        console.log(\"[DashboardStatTable] useEffect called\");\r\n        let tabdata = {\"headers\":props.data.headers};\r\n        if(selectedOption === \"India\"){            \r\n            tabdata.data = props.data.content.countryData;\r\n        }else{\r\n            tabdata.data = props.data.content.stateData[selectedOption].data;            \r\n        }\r\n        setTableData(tabdata);\r\n    },[selectedOption,props]);\r\n    return (\r\n        <React.Fragment>\r\n            <StateSelector \r\n            style={{marginTop:10}}\r\n            defaultState={options[0]} \r\n            states={options} \r\n            singleSelect={true}\r\n            handleStateChange={(selectedState) => handleChange(selectedState)}></StateSelector>           \r\n            {tableData ? <DashboardTable data={tableData}></DashboardTable>:null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DashboardStatTable;","import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport cx from 'classnames';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\nimport parse from 'html-react-parser';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useRowStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    }\r\n  },\r\n  clickableRow: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n  dynamicPadding: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(1)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(0.75)\r\n    }\r\n  },\r\n  expandIcon: {\r\n    marginLeft: -10,\r\n    marginRight: 5,\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  info: {\r\n    verticalAlign: 'middle',    \r\n    fontSize: '1.2rem'\r\n  }\r\n}));\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n  arrow: {\r\n    color: theme.palette.common.black\r\n  },\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.black,\r\n    maxWidth: 325,    \r\n    fontSize: '0.85rem'\r\n  },\r\n}));\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(1)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(0.75)\r\n    }\r\n  }\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nfunction Row(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useRowStyles();\r\n  const tooltipClasses = useStylesBootstrap();\r\n  const { stateData } = { ...props };\r\n  const { districtData } = { ...props.districtData };\r\n  const districts = Object.keys(districtData);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={cx(classes.root, classes.clickableRow)} onClick={() => setOpen(!open)} >\r\n        <TableCell align=\"left\" className={classes.dynamicPadding}>\r\n          <IconButton className={classes.expandIcon} aria-label=\"expand row\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n          <label style={{ verticalAlign: 'middle' }}>{stateData.state}</label>&nbsp;\r\n          {stateData.statenotes && stateData.statenotes.trim().length > 0 ?\r\n            <Tooltip arrow title={parse(stateData.statenotes)} placement=\"top\" classes={tooltipClasses}>\r\n              <InfoOutlined className={classes.info}></InfoOutlined>\r\n            </Tooltip> : null}\r\n        </TableCell>\r\n        <TableCell align=\"center\" className={classes.dynamicPadding}>{stateData.confirmed}</TableCell>\r\n        <TableCell align=\"center\" className={classes.dynamicPadding}>{stateData.active}</TableCell>\r\n        <TableCell align=\"center\" className={classes.dynamicPadding}>{stateData.recovered}</TableCell>\r\n        <TableCell align=\"center\" className={classes.dynamicPadding}>{stateData.deaths}</TableCell>\r\n      </TableRow>\r\n      <StyledTableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Paper elevation={1}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Table aria-label=\"districts\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell align=\"left\">District</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Confirmed</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Active</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Recovered</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Deceased</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {districts.map((district, index) => (\r\n                    <StyledTableRow className={classes.root} key={index}>\r\n                      <TableCell align=\"left\" className={classes.dynamicPadding}>{district}</TableCell>\r\n                      <TableCell align=\"center\" className={classes.dynamicPadding}>{districtData[district].confirmed}</TableCell>\r\n                      <TableCell align=\"center\" className={classes.dynamicPadding}>{districtData[district].active}</TableCell>\r\n                      <TableCell align=\"center\" className={classes.dynamicPadding}>{districtData[district].recovered}</TableCell>\r\n                      <TableCell align=\"center\" className={classes.dynamicPadding}>{districtData[district].deceased}</TableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Collapse>\r\n          </Paper>\r\n        </TableCell>\r\n      </StyledTableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function CollapsibleTable(props) {\r\n  const { stateData, districtData } = { ...props };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <StyledTableRow>\r\n            <StyledTableCell align=\"left\">State/UT</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Confirmed</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Active</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Recovered</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Deceased</StyledTableCell>\r\n          </StyledTableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {stateData.map((item) => (\r\n            item.statecode !== \"TT\" ?\r\n              <Row key={item.statecode} stateData={item} districtData={districtData[item.state]}></Row> : null\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst baseUrl = 'https://raw.githubusercontent.com/praty94/covid-data-isi/master';\r\nconst appData = 'App%20Data';\r\nconst statData = 'Statistical%20Data';\r\nexport const fetchDashboardData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${statData}/OverallData.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchDashboardData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchDownloadableReports = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${appData}/Reports.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchDownloadableReports] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchWeeklyIncreaseData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${statData}/WeeklyRateOfIncrease.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchWeeklyIncreaseData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchRecoveryRateData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${statData}/RecoveryRate.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchRecoveryRateData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchTrafficIntensityData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${statData}/TrafficIntensity.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchTrafficIntensityData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchConcentrationData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${statData}/Concentration.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchConcentrationData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchTestedPositiveData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${statData}/TestingStateData.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchTestedPositiveData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchDeathRateData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${statData}/DeathRate.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchDeathRateData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchFAQData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${appData}/FAQData.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchFAQData] Failed\");\r\n    }    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '../Card/Card';\r\nimport { fetchSummary, fetchStateDistrictData } from '../../Api/Covid19India';\r\nimport IndiaCovidMap from '../IndiaCovidMap/IndiaCovidMap';\r\nimport { MenuItem, FormControl, Select, Grid, Typography, Divider, Button } from '@material-ui/core';\r\nimport DashboardSection from './DashboardSection';\r\nimport TimeSeriesGraph from './TimeSeriesGraph';\r\nimport DashboardStatTable from './DashboardStatTable';\r\nimport ExpandableTable from '../Common Components/ExpandableTable';\r\nimport { fetchDashboardData, fetchDownloadableReports } from '../../Api/ISI_StatisticalData';\r\nimport parse from 'html-react-parser';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport messages from '../../Messages/DashboardMessages.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: -10,\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    customPanel: {\r\n        display: 'block'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n        marginLeft: 20\r\n    },\r\n    marginT20: {\r\n        marginTop: 20\r\n    },\r\n    marginB20: {\r\n        marginBottom: 20\r\n    }\r\n}));\r\n\r\nconst formatHeatMapData = (statewiseArray) => {\r\n    let activeHeatMapData = [], confirmedHeatMapData = [], deathsHeatMapData = [];\r\n    let maxActive = 0, maxConfirmed = 0, maxDeaths = 0;\r\n    //starting mapping from index 1 since the first index is always the overall country status\r\n    for (let i = 1; i < statewiseArray.length; i++) {\r\n        activeHeatMapData.push({ id: statewiseArray[i].statecode, state: statewiseArray[i].state, value: statewiseArray[i].active });\r\n        confirmedHeatMapData.push({ id: statewiseArray[i].statecode, state: statewiseArray[i].state, value: statewiseArray[i].confirmed });\r\n        deathsHeatMapData.push({ id: statewiseArray[i].statecode, state: statewiseArray[i].state, value: statewiseArray[i].deaths });\r\n\r\n        maxActive = Math.max(maxActive, statewiseArray[i].active);\r\n        maxConfirmed = Math.max(maxConfirmed, statewiseArray[i].confirmed);\r\n        maxDeaths = Math.max(maxDeaths, statewiseArray[i].deaths);\r\n    }\r\n    return {\r\n        activeData: { heatMapData: activeHeatMapData, max: maxActive },\r\n        confirmedData: { heatMapData: confirmedHeatMapData, max: maxConfirmed },\r\n        deathsActive: { heatMapData: deathsHeatMapData, max: maxDeaths }, init: true\r\n    };\r\n}\r\nexport default function Dashboard(props) {\r\n    const classes = useStyles();\r\n    const heatMapOptions = ['confirmedData', 'activeData', 'deathsActive'];\r\n    const [cardsData, setCardsData] = useState({});\r\n\r\n    const [dashboardData, setDashboardData] = useState({});\r\n    const [heatMapData, setHeatMapData] = useState({});\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [mapOption, setMapOption] = useState(heatMapOptions[0]);\r\n    const [stateTableData, setStateTableData] = useState(null);\r\n    const [districtTableData, setDistrictTableData] = useState(null);\r\n    const [downloadableReportsData, setDownloadableReportsData] = useState(null);\r\n\r\n    const handleChangeExpanded = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setMapOption(event.target.value);\r\n    };\r\n    const handleFileRedirect = (url) => {\r\n        window.open(url, \"_blank\");\r\n    }\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetchSummary();\r\n            if (!response || !response.data)\r\n                return;\r\n            const { statewise } = { ...response.data };\r\n\r\n            setCardsData({\r\n                confirmedProps: { cardType: \"confirmed\", pageId: 1, title: \"Confirmed\", value: statewise[0].confirmed, valueChange: statewise[0].deltaconfirmed },\r\n                activeProps: { cardType: \"active\", pageId: 4, title: \"Active\", value: statewise[0].active },\r\n                recoveredProps: { cardType: \"recovered\", pageId: 2, title: \"Recovered\", value: statewise[0].recovered, valueChange: statewise[0].deltarecovered },\r\n                deathProps: { cardType: \"death\", pageId: 6, title: \"Deceased\", value: statewise[0].deaths, valueChange: statewise[0].deltadeaths },\r\n            });\r\n            setHeatMapData(formatHeatMapData(statewise));\r\n            setStateTableData(statewise);\r\n        })();\r\n        (async () => {\r\n            const responseData = await fetchDashboardData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setDashboardData(responseData.data);\r\n\r\n        })();\r\n        (async () => {\r\n            const districtData = await fetchStateDistrictData();\r\n            if (!districtData || !districtData.data)\r\n                return;\r\n\r\n            setDistrictTableData(districtData.data);\r\n        }\r\n        )();\r\n        (async () => {\r\n            const response = await fetchDownloadableReports();\r\n            if (!response || !response.data)\r\n                return;\r\n\r\n            setDownloadableReportsData(response.data);\r\n        }\r\n        )();\r\n        return () => {\r\n            console.log(\"[Dashboard] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h6\" color=\"textPrimary\">{messages.mainHeading}</Typography>\r\n            <Divider></Divider>\r\n            <Typography variant=\"h6\" color=\"textPrimary\" style={{ marginTop: 10 }}>{messages.subHeading}</Typography>\r\n            <Typography color=\"textSecondary\">{messages.India}</Typography>\r\n            <Divider></Divider>\r\n            <Grid container direction=\"column\">\r\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                    {cardsData.confirmedProps ?\r\n                        <React.Fragment>\r\n                            <Card item sm={6} md={3} {...cardsData.confirmedProps}></Card>\r\n                            <Card item sm={6} md={3} {...cardsData.activeProps}></Card>\r\n                            <Card item sm={6} md={3} {...cardsData.recoveredProps}></Card>\r\n                            <Card item sm={6} md={3} {...cardsData.deathProps}></Card>\r\n                        </React.Fragment> : null}\r\n                </Grid>\r\n            </Grid>\r\n            <div className={classes.marginT20}>\r\n                <DashboardSection expanded={expanded === 'panel1'}\r\n                    panelName='panel1' heading={messages.timeSeriesGraph}\r\n                    handleChangeExpanded={handleChangeExpanded}>\r\n                    <TimeSeriesGraph theme={props.theme}></TimeSeriesGraph>\r\n                    <Typography>{messages.chartSubText}</Typography>\r\n                </DashboardSection>\r\n            </div>\r\n            <div className={classes.marginT20}>\r\n                {heatMapData.init ?\r\n                    <DashboardSection expanded={expanded === 'panel2'}\r\n                        panelName='panel2' heading={messages.heatMap}\r\n                        handleChangeExpanded={handleChangeExpanded}>\r\n                        <FormControl style={{ width: 250 }} variant=\"outlined\">\r\n                            <Select\r\n                                labelId=\"heatmap-select-labelId\"\r\n                                id=\"heatmap-select-id\"\r\n                                value={mapOption}\r\n                                onChange={handleChange}>\r\n                                <MenuItem value={heatMapOptions[0]}>{messages.confirmed}</MenuItem>\r\n                                <MenuItem value={heatMapOptions[1]}>{messages.active}</MenuItem>\r\n                                <MenuItem value={heatMapOptions[2]}>{messages.deceased}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <IndiaCovidMap data={heatMapData[mapOption]}></IndiaCovidMap>\r\n                    </DashboardSection>\r\n                    : null}\r\n            </div>\r\n            <div className={classes.marginT20}>\r\n                {stateTableData && districtTableData ?\r\n                    <DashboardSection expanded={expanded === 'panel3'}\r\n                        panelName='panel3' heading={messages.stateDistrictData}\r\n                        handleChangeExpanded={handleChangeExpanded}>\r\n                        <ExpandableTable stateData={stateTableData} districtData={districtTableData}></ExpandableTable>\r\n                    </DashboardSection> : null}\r\n            </div>\r\n            <Typography className={classes.marginT20} variant=\"h6\" color=\"textPrimary\">{messages.analysis}</Typography>\r\n            <Divider></Divider>\r\n            <div className={classes.marginT20}>\r\n                {dashboardData && dashboardData.data ?\r\n                    <DashboardSection expanded={expanded === 'panel4'}\r\n                        panelName='panel4' heading={messages.riskSummary}\r\n                        handleChangeExpanded={handleChangeExpanded}>\r\n                        <Typography className={classes.marginB20} color=\"textPrimary\">{parse(dashboardData.heading)}</Typography>\r\n                        <DashboardStatTable data={dashboardData.data}></DashboardStatTable>\r\n                    </DashboardSection> : null}\r\n            </div>\r\n            <div className={classes.marginT20}>\r\n                {downloadableReportsData && downloadableReportsData.data ?\r\n                    <DashboardSection expanded={expanded === 'panel5'}\r\n                        panelName='panel5' heading={messages.riskReport}\r\n                        handleChangeExpanded={handleChangeExpanded}>\r\n                        <Grid container spacing={2}>\r\n                            {downloadableReportsData.data.map((item, index) => (\r\n                                <Grid item key={index}>\r\n                                    <Button variant=\"outlined\" size=\"large\"\r\n                                        startIcon={<DescriptionIcon />} onClick={() => handleFileRedirect(item.fileURL)}>\r\n                                        {item.fileName}\r\n                                    </Button>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </DashboardSection> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n});\r\n\r\nexport default function WeeklyIncreaseDataTable(props) {\r\n  const classes = useStyles();\r\n  const WeeklyData = props.data;\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"WeeklyIncrease table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell></StyledTableCell>\r\n            {WeeklyData.data.stateData[0].weeklyData.map((item, index) => (\r\n              <StyledTableCell align=\"center\" colSpan={2} key={index}>{item.startDate} <br />to<br /> {item.endDate}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n          <TableRow>\r\n            {WeeklyData.data.headers.map((item, index) => {\r\n              return (\r\n                index === 0 ? \r\n                <StyledTableCell key={index}>\r\n                  {item}\r\n                </StyledTableCell> :\r\n                <StyledTableCell align=\"center\" key={index}>\r\n                    {item}\r\n                </StyledTableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {WeeklyData.data.stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item.weeklyData.map((weeklyItem, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <StyledTableCell align=\"center\">\r\n                      {weeklyItem.value}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      {weeklyItem.rank}\r\n                    </StyledTableCell>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst WeekFooter = (props) => (\r\n    <Grid container justify=\"center\" spacing={2}>\r\n        {props.data.map((item, index) => (\r\n            <Grid key={index} item style={{ display: 'inline-flex' }}>\r\n                <ArrowRightIcon color=\"secondary\"></ArrowRightIcon>\r\n                <Typography color=\"textPrimary\" style={{ fontSize: '0.85rem', lineHeight: '1.5rem' }}>{item}</Typography>\r\n            </Grid>\r\n        ))}\r\n    </Grid>\r\n);\r\n\r\nexport default WeekFooter;","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\nimport WeekFooter from '../WeekFooter';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function WeeklyIncreaseRatioTable(props) {\r\n  const WeeklyData = props.data;\r\n  const {footers} = {...props.data.data};\r\n  return (\r\n    <React.Fragment>\r\n      <TableContainer style={{marginBottom:20}} component={Paper}>\r\n        <Table aria-label=\"Weekly increase ratio table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>State / UT</StyledTableCell>\r\n              {WeeklyData.data.stateData[0].ratios.map((item, index) => (\r\n                <StyledTableCell align=\"center\" key={index}>{item.name}</StyledTableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {WeeklyData.data.stateData.map((item, index) => (\r\n              <StyledTableRow key={index}>\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {item.stateName}\r\n                </StyledTableCell>\r\n                {item.ratios.map((weeklyItem, index) => {\r\n                  return (\r\n                    <React.Fragment key={index}>\r\n                      <StyledTableCell align=\"center\">\r\n                        {weeklyItem.value ? weeklyItem.value : \"N/A\"}\r\n                      </StyledTableCell>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {footers ?<WeekFooter data={footers}/> : null}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport WeeklyIncreaseDataTable from './WeeklyIncreaseDataTable';\r\nimport WeeklyIncreaseRatioTable from './WeeklyIncreaseRatioTable';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`weeklyIncreaseAnalysis-tabpanel-${index}`}\r\n            aria-labelledby={`weeklyIncreaseAnalysis-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n               <div style={{marginTop:10}}>\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index,value,classes) {\r\n    let allyProps = {\r\n        id: `weeklyIncreaseAnalysis-tab-${index}`,\r\n        'aria-controls': `weeklyIncreaseAnalysis-tabpanel-${index}`\r\n    }\r\n    if(index === value)\r\n        allyProps.className = classes.customSelect;\r\n\r\n    return allyProps;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    customSelect:{\r\n        borderBottom:'2px solid #7a85ff!important'\r\n    }\r\n}));\r\n\r\nexport default function WeeklyIncreaseAnalysis(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs centered value={value} onChange={handleChange} aria-label=\"weeklyIncreaseAnalysis tabs\" variant=\"fullWidth\">\r\n                    <Tab label=\"Count\" {...a11yProps(0,value,classes)}/>\r\n                    <Tab label=\"Ratio\" {...a11yProps(1,value,classes)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <WeeklyIncreaseDataTable data={props.data}></WeeklyIncreaseDataTable>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <WeeklyIncreaseRatioTable data={props.data}></WeeklyIncreaseRatioTable>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StateSelector(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        multiple        \r\n        id=\"multiple-state-selector\"\r\n        options={props.states}\r\n        getOptionLabel={(option) => option}      \r\n        onChange={(e,value)=>props.handleStateChange(value)}\r\n        defaultValue={props.defaultStates}\r\n        renderInput={(params) => (\r\n          <TextField {...params} color=\"secondary\" variant=\"outlined\" label=\"States\" placeholder=\"Select States..\" />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","export const colors = [\r\n    \"#16a085\",\r\n    \"#2ecc71\",\r\n    \"#f1c40f\",\r\n    \"#f39c12\",\r\n    \"#d35400\",\r\n    \"#e67e22\",\r\n    \"#c0392b\",\r\n    \"#2980b9\",\r\n    \"#9b59b6\",\r\n    \"#34495e\",\r\n    \"#ff9ff3\",\r\n    \"#00d2d3\",\r\n    \"#feca57\",\r\n    \"#54a0ff\",\r\n    \"#5f27cd\",\r\n    \"#48dbfb\",\r\n    \"#1dd1a1\",\r\n    \"#576574\",\r\n    \"#222f3e\",\r\n    \"#b71540\",\r\n    \"#0c2461\",\r\n    \"#6a89cc\"\r\n  ];\r\n  ","import {colors} from './ChartColors';\r\nconst barChartThemeHelper = (data) => {    \r\n    let options = {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350\r\n        },        \r\n        colors:colors,\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: !!data.horizontal,\r\n                columnWidth: '55%',\r\n                endingShape: 'rounded',\r\n                distributed: !!data.distributed\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent']\r\n        },\r\n        xaxis: {\r\n            categories: data.categories,\r\n        },\r\n        yaxis:{},\r\n        fill: {\r\n            opacity: 1\r\n        },\r\n        legend: {\r\n            show:!!!data.hideLegend,\r\n            itemMargin: {\r\n              vertical: 5\r\n            }\r\n        },\r\n    }\r\n\r\n    if (data.theme !== \"light\") {\r\n        options.chart.foreColor = '#FFFFFF';\r\n    } else {\r\n        options.chart.foreColor = '#373d3f'; \r\n    }\r\n    \r\n    options.tooltip = { theme: data.theme };\r\n    return options;\r\n}\r\nexport default barChartThemeHelper;","import React, { useState, useEffect } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport barChartThemeHelper from '../Theme/BarChartThemeHelper';\r\nimport useWindowDimensions from '../../Helpers/WindowDimensionHelper';\r\n\r\nconst BarChart = (props) => {\r\n    const { height, width } = useWindowDimensions();\r\n    const [chartData, setChartData] = useState({\r\n        series: props.seriesData,\r\n        options: barChartThemeHelper({\r\n            categories: props.categories,\r\n            distributed: props.distributed,\r\n            theme: props.theme,\r\n            hideLegend:props.hideLegend,\r\n            horizontal: props.horizontal\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(\"[BarChart] useEffect called\");\r\n        setChartData({\r\n            series: props.seriesData,\r\n            options: barChartThemeHelper({\r\n                categories: props.categories,\r\n                distributed: props.distributed,\r\n                theme: props.theme,\r\n                hideLegend:props.hideLegend,\r\n                horizontal: props.horizontal\r\n            })\r\n        });\r\n    }, [props]);\r\n\r\n    return <ReactApexChart style={{ marginTop: \"9px\", marginLeft: \"-5px\" }} width={getRealWidth(width)}\r\n        height={0.65 * height} options={chartData.options} series={chartData.series} type=\"bar\" />\r\n}\r\nconst getRealWidth = (width) => {\r\n    if (width > 650 && width < 960) {\r\n        return width - 80;\r\n    } else if (width >= 960) {\r\n        return width - 320;\r\n    } else {\r\n        return width - 50;\r\n    }\r\n}\r\nexport default BarChart;","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport WeeklyBarChart from '../Common Components/BarChart';\r\nimport WeekFooter from './WeekFooter';\r\n\r\nconst getFormattedData = (WeeklyData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    WeeklyData.data.stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let ratioArray = [];\r\n        item.ratios.forEach((ratio) => {\r\n            ratioArray.push(ratio.value);\r\n            if (index === 0)\r\n                categories.push(ratio.name);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: ratioArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: ratioArray };\r\n    });\r\n    return { stateNames: stateNameArray.sort(), seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\nconst WeeklyGraph = (props) => {\r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const { footers } = { ...props.data.data };\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <WeeklyBarChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></WeeklyBarChart>\r\n            {footers ?<WeekFooter data={footers}/> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default WeeklyGraph;","import React, { useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Typography, Tabs, Tab, Box, LinearProgress } from '@material-ui/core';\r\nimport WeeklyIncreaseAnalysis from './WeeklyIncreaseAnalysis/WeeklyIncreaseAnalysis';\r\nimport WeeklyGraph from './WeeklyIncreaseGraph';\r\nimport { fetchWeeklyIncreaseData } from '../../Api/ISI_StatisticalData';\r\nimport parse from 'html-react-parser';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`weeklyIncrease-tabpanel-${index}`}\r\n            aria-labelledby={`weeklyIncrease-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `weeklyIncrease-tab-${index}`,\r\n        'aria-controls': `weeklyIncrease-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function WeeklyIncrease(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [weeklyData, setWeeklyData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchWeeklyIncreaseData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setWeeklyData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[WeeklyIncrease] unmounted\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        weeklyData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textPrimary\">{parse(weeklyData.heading)}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"weeklyIncrease tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Data\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <WeeklyGraph theme={props.theme} data={weeklyData}></WeeklyGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <WeeklyIncreaseAnalysis data={weeklyData}></WeeklyIncreaseAnalysis>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment>\r\n            : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function RecoveryRateDataTable(props) {  \r\n  const { countryData, stateData } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Recovery Rate Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>\r\n            {stateData[0].recoveryRate.map((item, index) => (\r\n              <StyledTableCell style={{whiteSpace:\"nowrap\"}} align=\"center\" key={index}>{item.date}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <StyledTableRow key=\"countryRow\">\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {countryData.countryName}\r\n            </StyledTableCell>\r\n            {countryData.recoveryRate.map((item,index) => (\r\n              <StyledTableCell align=\"center\" key={index}> {item.rate} </StyledTableCell>\r\n            ))}\r\n          </StyledTableRow>\r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item.recoveryRate.map((recoveryItem, index) => (\r\n                    <StyledTableCell align=\"center\" key={index}>\r\n                      {recoveryItem.rate ? recoveryItem.rate : \"N/A\"}\r\n                    </StyledTableCell>                  \r\n                ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport BarChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (RecoveryData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const {stateData,countryData} = {...RecoveryData.data}\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let rateArray = [];\r\n        item.recoveryRate.forEach((item) => {\r\n            rateArray.push(item.rate);\r\n            if (index === 0)\r\n                categories.push(item.date);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: rateArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: rateArray };\r\n    });\r\n    //Mapping data for india\r\n    let countryRateArray = [];\r\n    countryData.recoveryRate.forEach((item) => {\r\n        countryRateArray.push(item.rate);\r\n    });\r\n    //mapping data wih state name so that it can be retrieved in O(1)\r\n    seriesData[countryData.countryName] = { name: countryData.countryName, data: countryRateArray };\r\n    return { stateNames: [countryData.countryName,...stateNameArray.sort()], seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\n\r\n\r\nconst RecoveryRateGraph = (props) => {    \r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <BarChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></BarChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default RecoveryRateGraph;","import React, { useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport RecoveryRateDataTable from './RecoveryRateDataTable';\r\nimport RecoveryRateGraph from './RecoveryRateGraph';\r\nimport { fetchRecoveryRateData } from '../../Api/ISI_StatisticalData';\r\nimport parse from 'html-react-parser';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`recoveryRate-tabpanel-${index}`}\r\n            aria-labelledby={`recoveryRate-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `recoveryRate-tab-${index}`,\r\n        'aria-controls': `recoveryRate-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n    icon: {\r\n        height: 20,\r\n        color: '#fff'\r\n    }\r\n}));\r\n\r\nexport default function RecoveryRate(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [recoveryData, setRecoveryData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchRecoveryRateData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setRecoveryData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Recovery Rate] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        recoveryData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textPrimary\">{parse(recoveryData.heading)}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"recoveryRate tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Data\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <RecoveryRateGraph theme={props.theme} data={recoveryData}></RecoveryRateGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <RecoveryRateDataTable data={recoveryData.data}></RecoveryRateDataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function DataTable(props) {\r\n  \r\n  const { countryData, stateData } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table  aria-label=\"Custom Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>\r\n            {stateData[0][props.category].map((item, index) => {\r\n              if (props.headerRange)//If headerRange is specified table expects 2 header categories \"start\" to \"end\"\r\n                return (\r\n                  <StyledTableCell style={{ whiteSpace:'nowrap'}} align=\"center\" key={index}>\r\n                    {item[props.headerCategory1]}<br />to<br />{item[props.headerCategory2]}\r\n                  </StyledTableCell>);\r\n              else\r\n                return <StyledTableCell align=\"center\" key={index}>{item[props.headerCategory]}</StyledTableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {countryData && countryData.countryName ?\r\n            <StyledTableRow key=\"countryRow\">\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {countryData.countryName}\r\n              </StyledTableCell>\r\n              {countryData[props.category].map((item) => (\r\n                <StyledTableCell align=\"center\"> {item[props.itemCategory]} </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow> : null}\r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item[props.category].map((recoveryItem, index) => (\r\n                <StyledTableCell align=\"center\" key={index}>\r\n                  {recoveryItem[props.itemCategory] ? recoveryItem[props.itemCategory] : \"N/A\"}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport TrafficIntensityChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (TrafficIntensityData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const {stateData,countryData} = {...TrafficIntensityData.data}\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let intensityArray = [];\r\n        item.trafficIntensity.forEach((item) => {\r\n            intensityArray.push(item.value);\r\n            if (index === 0)\r\n                categories.push(item.name);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: intensityArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: intensityArray };\r\n    });\r\n    //Mapping data for india\r\n    let countryIntensityArray = [];\r\n    countryData.trafficIntensity.forEach((item) => {\r\n        countryIntensityArray.push(item.value);\r\n    });\r\n    //mapping data wih state name so that it can be retrieved in O(1)\r\n    seriesData[countryData.countryName] = { name: countryData.countryName, data: countryIntensityArray };\r\n    return { stateNames: [countryData.countryName,...stateNameArray.sort()], seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\nconst TrafficIntensityGraph = (props) => {\r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <TrafficIntensityChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></TrafficIntensityChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default TrafficIntensityGraph;","import React,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport DataTable from '../Common Components/DataTable';\r\nimport TrafficIntensityGraph from './TrafficIntensityGraph';\r\nimport { fetchTrafficIntensityData } from '../../Api/ISI_StatisticalData';\r\nimport parse from 'html-react-parser';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`trafficIntensity-tabpanel-${index}`}\r\n            aria-labelledby={`trafficIntensity-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `trafficIntensity-tab-${index}`,\r\n        'aria-controls': `trafficIntensity-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function TrafficIntensity(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [trafficIntensityData, setTrafficIntensityData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchTrafficIntensityData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setTrafficIntensityData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Traffic Intensity] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        trafficIntensityData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textPrimary\"> {parse(trafficIntensityData.heading)}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"trafficIntensity tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Data\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TrafficIntensityGraph data={trafficIntensityData} theme={props.theme}></TrafficIntensityGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <DataTable data={trafficIntensityData.data} category=\"trafficIntensity\" headerCategory=\"name\" itemCategory=\"value\"></DataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function ConcentrationDataTable(props) {\r\n \r\n  const { stateData,headers } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Concentration Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {headers.map((item,index)=>(\r\n              index === 0 ? \r\n              <StyledTableCell>{item}</StyledTableCell>\r\n              :<StyledTableCell align=\"center\">{item}</StyledTableCell>\r\n            ))}                     \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>          \r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {item.concentration}\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport BarChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (ConcentrationData) => {\r\n    let stateMap = {}, concentrationArray = [], allStates = [],defaultStates=[], currentStates = [], currentSeriesData = [];\r\n    const { stateData } = { ...ConcentrationData.data }\r\n    stateData.forEach((item) => {\r\n        allStates.push(item.stateName);\r\n        concentrationArray.push(item.concentration);\r\n        stateMap[item.stateName] = item.concentration;\r\n    });\r\n    \r\n    //extracting first 5 states\r\n    currentSeriesData = [{ name: \"Spread\", data: [...concentrationArray].slice(0, 5) }];\r\n    currentStates = defaultStates = [...allStates].slice(0, 5);\r\n\r\n    return { stateNames: allStates.sort(), stateMap, currentSeriesData, currentStates,defaultStates };\r\n}\r\n\r\n\r\n\r\nconst ConcentrationGraph = (props) => {\r\n    const { stateNames, stateMap, currentSeriesData, currentStates,defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData,currentStates });\r\n    \r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [],currentStates=[];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (stateMap[selectedStateArray[i]]) {\r\n                filteredData.push(stateMap[selectedStateArray[i]]);\r\n                currentStates.push(selectedStateArray[i]);\r\n            }\r\n        }\r\n        return {seriesData : [{ name: \"Concentration\", data: filteredData}],currentStates};\r\n    }\r\n    \r\n    const handleStateChange = (selectedStateArray) => {\r\n        const {seriesData,currentStates} = filterChartData(selectedStateArray);\r\n        console.log(currentStates);\r\n        setChartData({ currentSeriesData:seriesData,currentStates});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <BarChart distributed={true} horizontal={true} hideLegend={true} theme={props.theme} seriesData={chartData.currentSeriesData} categories={chartData.currentStates}></BarChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ConcentrationGraph;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport ConcentrationDataTable from './ConcentrationDataTable';\r\nimport ConcentrationGraph from './ConcentrationGraph';\r\nimport { fetchConcentrationData } from '../../Api/ISI_StatisticalData';\r\nimport parse from 'html-react-parser';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`concentration-tabpanel-${index}`}\r\n            aria-labelledby={`concentration-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `concentration-tab-${index}`,\r\n        'aria-controls': `concentration-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function Concentration(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [concentrationData, setConcentrationData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchConcentrationData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setConcentrationData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Concentration] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        concentrationData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textPrimary\">{parse(concentrationData.heading)}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"concentration tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Data\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <ConcentrationGraph data={concentrationData} theme={props.theme}></ConcentrationGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <ConcentrationDataTable data={concentrationData.data}></ConcentrationDataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function DeathRateDataTable(props) {\r\n  \r\n  const { countryData, stateData } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Recovery Rate Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>\r\n            {stateData[0].deathRate.map((item, index) => (\r\n              <StyledTableCell style={{whiteSpace:\"nowrap\"}} align=\"center\" key={index}>{item.date}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {countryData.countryName ? \r\n          <StyledTableRow key=\"countryRow\">\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {countryData.countryName}\r\n            </StyledTableCell>\r\n            {countryData.deathRate.map((item,index) => (\r\n              <StyledTableCell align=\"center\" key={index}> {item.rate} </StyledTableCell>\r\n            ))}\r\n          </StyledTableRow> : null}\r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item.deathRate.map((deathItem, index) => (\r\n                    <StyledTableCell align=\"center\" key={index}>\r\n                      {deathItem.rate ? deathItem.rate : \"N/A\"}\r\n                    </StyledTableCell>                  \r\n                ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport BarChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (DeathRateData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const { stateData } = { ...DeathRateData.data }\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let rateArray = [];\r\n        item.deathRate.forEach((item) => {\r\n            rateArray.push(item.rate);\r\n            if (index === 0)\r\n                categories.push(item.date);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: rateArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: rateArray };\r\n    });\r\n    \r\n    return { stateNames: stateNameArray.sort(), seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\nconst DeathRateGraph = (props) => {\r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <BarChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></BarChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DeathRateGraph;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport DeathRateDataTable from './DeathRateDataTable';\r\nimport DeathRateGraph from './DeathRateGraph';\r\nimport { fetchDeathRateData } from '../../Api/ISI_StatisticalData';\r\nimport parse from 'html-react-parser';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`DeathRate-tabpanel-${index}`}\r\n            aria-labelledby={`DeathRate-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `DeathRate-tab-${index}`,\r\n        'aria-controls': `DeathRate-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function DeathRate(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [deathRateData, setDeathRateData] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchDeathRateData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setDeathRateData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Death Rate] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        deathRateData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textPrimary\">{parse(deathRateData.heading)}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"deathRate tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Data\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <DeathRateGraph data={deathRateData} theme={props.theme}></DeathRateGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <DeathRateDataTable data={deathRateData.data}></DeathRateDataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport TrafficIntensityChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (TestedPositiveData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const {stateData} = {...TestedPositiveData.data}\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let testDataArray = [];\r\n        item.testData.forEach((item) => {\r\n            testDataArray.push(item.percPositive);\r\n            if (index === 0)\r\n                categories.push(item.startDate);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: testDataArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: testDataArray };\r\n    });\r\n    \r\n    return { stateNames: stateNameArray.sort(), seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\nconst TrafficIntensityGraph = (props) => {\r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <TrafficIntensityChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></TrafficIntensityChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default TrafficIntensityGraph;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport DataTable from '../Common Components/DataTable';\r\nimport TestedPositiveGraph from './TestedPostiveGraph';\r\nimport { fetchTestedPositiveData } from '../../Api/ISI_StatisticalData';\r\nimport parse from 'html-react-parser';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`TestedPositive-tabpanel-${index}`}\r\n            aria-labelledby={`TestedPositive-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `TestedPositive-tab-${index}`,\r\n        'aria-controls': `TestedPositive-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function TestedPositive(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [testedPositiveData, setTestedPositiveData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchTestedPositiveData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setTestedPositiveData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Tested Positive] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        testedPositiveData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textPrimary\">{parse(testedPositiveData.heading)}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"TestedPositive tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Data\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TestedPositiveGraph data={testedPositiveData} theme={props.theme}></TestedPositiveGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <DataTable data={testedPositiveData.data} category=\"testData\"\r\n                            headerCategory=\"endDate\" itemCategory=\"percPositive\"></DataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Paper, Typography, Divider, Grid,LinearProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport QuestionIcon from '@material-ui/icons/HelpOutline';\r\nimport AnswerIcon from '@material-ui/icons/ChevronRight';\r\nimport { green } from '@material-ui/core/colors';\r\nimport parse from 'html-react-parser';\r\nimport { fetchFAQData } from '../../Api/ISI_StatisticalData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: theme.spacing(1)\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    questionContainer: {\r\n        alignItems: 'center',\r\n        flexWrap: 'noWrap'\r\n    },\r\n    answerContainer: {\r\n        marginTop: theme.spacing(1),\r\n        flexWrap: 'noWrap'\r\n    }\r\n\r\n}));\r\n\r\nconst Faq = () => {\r\n    const classes = useStyles();\r\n    const [faqData, setFaqData] = useState(null);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchFAQData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setFaqData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[FAQ] unmounted\");\r\n        };\r\n    }, []);\r\n    \r\n    return (\r\n        faqData && faqData.data ? faqData.data.map((item, index) => (\r\n            <React.Fragment key={index}>\r\n                <Paper className={classes.paper}>\r\n                    <Grid container className={classes.questionContainer}>\r\n                        <QuestionIcon style={{ color: green[300] }}></QuestionIcon>\r\n                        <Typography variant=\"h6\" className={classes.text}>\r\n                            {item.question}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Divider></Divider>\r\n                    <Grid container className={classes.answerContainer}>\r\n                        <AnswerIcon style={{ color: '#66aaff' }}></AnswerIcon>\r\n                        <Typography  variant=\"subtitle1\" className={classes.text} gutterBottom>\r\n                            {parse(item.answer)}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </React.Fragment>\r\n        )) : <LinearProgress color=\"secondary\" />\r\n\r\n    );\r\n}\r\n\r\nexport default Faq;","import React from 'react';\r\nimport { Avatar, Paper, Grid, Typography } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {LinkedIn,GitHub,Email} from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        maxWidth: 500\r\n    },\r\n    paper: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary\r\n    },\r\n    center: {\r\n        alignSelf: 'center'\r\n    },\r\n    avatar: {\r\n        height: 60,\r\n        width: 60\r\n    },\r\n    rightContent: {\r\n        marginLeft: 15,\r\n        textAlign: 'left'\r\n    },\r\n    buttonContainer: {\r\n        marginLeft: -15\r\n    }\r\n}));\r\n\r\nconst openLink = (url, sameTab) => {\r\n    sameTab ? window.location = url : window.open(url, \"_blank\");\r\n}\r\nconst AboutCard = (props) => {\r\n    const classes = useStyles();\r\n    const { data } = { ...props };\r\n    return (<Grid item xs={12} md={6} className={classes.container}>\r\n        <Paper className={classes.paper}>\r\n            <Grid container style={{ flexWrap: 'noWrap' }}>\r\n                <Grid item className={classes.center}>\r\n                    <Avatar className={classes.avatar} alt={data.name} src={data.avatar} />\r\n                </Grid>\r\n                <Grid item className={classes.rightContent}>\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">{data.name}</Typography>\r\n                    <Typography color=\"textSecondary\">{data.currentRole}</Typography>\r\n                    <Grid className={classes.buttonContainer}>\r\n                        {data.linkedIn ?\r\n                            <IconButton onClick={() => openLink(data.linkedIn)} aria-label=\"delete\">\r\n                                <LinkedIn />\r\n                            </IconButton> : null}\r\n                        {data.github ?\r\n                            <IconButton onClick={() => openLink(data.github)} aria-label=\"delete\">\r\n                                <GitHub />\r\n                            </IconButton> : null}\r\n                        {data.email ?\r\n                            <IconButton onClick={() => openLink(data.email, true)} aria-label=\"delete\">\r\n                                <Email />\r\n                            </IconButton> : null}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    </Grid>);\r\n}\r\n\r\nexport default AboutCard;","import React from 'react';\r\nimport { Grid, Typography, Divider, Button, Paper, Link } from '@material-ui/core';\r\nimport Contributors from './Contributors.json';\r\nimport AboutCard from './AboutCard';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: 0\r\n        },\r\n        padding: theme.spacing(1)\r\n    },\r\n    subHeading: {\r\n        marginTop: 10\r\n    },\r\n    detailsContainer: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10\r\n    }\r\n\r\n}));\r\nconst handleGithubRedirect = () => {\r\n    window.open(\"https://github.com/praty94/covid-app-isi\", \"_blank\");\r\n}\r\nconst AboutPage = () => {\r\n    const classes = useStyles();\r\n    const { contributors } = { ...Contributors };\r\n    return (\r\n        <div className={classes.container}>\r\n            <div style={{ marginTop: -10 }}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">Analytics Team</Typography>\r\n                <Divider></Divider>\r\n                <div>\r\n                    {contributors.analytics && contributors.analytics.head ?\r\n                        <div>\r\n                            <Typography color=\"textSecondary\" className={classes.subHeading} gutterBottom>Head</Typography>\r\n                            <Grid container spacing={3}>\r\n                                <AboutCard data={contributors.analytics.head}></AboutCard>\r\n                            </Grid>\r\n                        </div> : null}\r\n                    {contributors.analytics && contributors.analytics.team ?\r\n                        <React.Fragment>\r\n                            <Typography color=\"textSecondary\" className={classes.subHeading} gutterBottom>Team</Typography>\r\n                            <Grid container spacing={3}>\r\n                                {contributors.analytics.team.map((item, index) => (\r\n                                    <AboutCard data={item} key={index}></AboutCard>\r\n                                ))}\r\n                            </Grid>\r\n                        </React.Fragment>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">Development Team</Typography>\r\n                <Divider></Divider>\r\n                <Grid container spacing={3} style={{ marginTop: 5 }}>\r\n                    {contributors.dev ?\r\n                        contributors.dev.map((item, index) => (\r\n                            <AboutCard data={item} key={index}></AboutCard>\r\n                        )) : null\r\n                    }\r\n                </Grid>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">Project Details</Typography>\r\n                <Divider></Divider>\r\n                <Paper className={classes.detailsContainer}>\r\n                    <Typography color=\"textPrimary\" gutterBottom>Our project is available on Github.</Typography>\r\n                    <Button variant=\"outlined\" size=\"large\" startIcon={<GitHubIcon />} onClick={() => handleGithubRedirect()}>Github Repository</Button>\r\n                </Paper>\r\n                <Paper className={classes.detailsContainer}>\r\n                    <Typography color=\"textPrimary\" gutterBottom>API -&nbsp;\r\n                    <Link href=\"https://api.covid19india.org/\" target='_blank' color=\"secondary\">\r\n                            <strong>api.covid19india.org</strong>\r\n                        </Link>\r\n                    </Typography>\r\n                    <Typography color=\"textPrimary\" gutterBottom>Our team uses the data to provide more in depth analysis that we show in different parts of the application.</Typography>\r\n                </Paper>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">Disclaimer</Typography>\r\n                <Divider></Divider>\r\n                <Paper className={classes.detailsContainer}>\r\n                    <Typography color=\"textPrimary\" gutterBottom>This dashboard uses data from (<Link href=\"https://www.covid19india.org/\" target='_blank' color=\"inherit\">\r\n                        <strong>covid19india.org</strong></Link>). While the analyses and presentation are carried out by us, we have no control over the accuracy of the base data.\r\nThis dashboard provides information about the underlying scenario from different perspectives to facilitate decision making. However, specific actions are not prescribed. The user needs to look at the information and decide accordingly.\r\nPlease refer to the ISI website for general disclaimers.</Typography>\r\n                </Paper>\r\n            </div>\r\n            <Typography style={{ float: \"right\",marginTop:10 }} color=\"textSecondary\" gutterBottom>Application Version : 1.0.1</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\nimport './App.css';\nimport { AppContextProvider } from './Context/AppContext';\nimport { AppShell } from './Components';\nfunction App() {\n  return (\n    <AppContextProvider>\n      <AppShell></AppShell>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}