{"version":3,"sources":["Assets/icons/MainIconWhite.svg","Assets/icons/MainIconBlack.svg","Data/AppElements.js","Context/AppContext.js","Helpers/IconHelper.js","Components/AppDrawer/AppDrawerContent.jsx","Components/AppDrawer/AppDrawer.jsx","Components/Theme/ThemeHelper.js","Components/PageSwitchHelper/PageSwitchHelper.jsx","HOC/Wrapper.jsx","Components/AppShell/AppShell.jsx","Components/Card/Card.jsx","Api/Covid19India.js","Components/IndiaCovidMap/Gradient.jsx","Components/IndiaCovidMap/IndiaCovidMap.jsx","Components/Theme/LineChartThemeHelper.js","Helpers/Debounce.js","Helpers/WindowDimensionHelper.js","Components/Common Components/LineChart.jsx","Components/Common Components/SimpleDataTable.jsx","Components/Common Components/SingleStateSelector.jsx","Components/Dashboard/DashboardStatTable.jsx","Api/ISI_StatisticalData.js","Components/Dashboard/Dashboard.jsx","Components/WeeklyIncrease/WeeklyIncreaseAnalysis/WeeklyIncreaseDataTable.jsx","Components/WeeklyIncrease/WeeklyIncreaseAnalysis/WeeklyIncreaseRatioTable.jsx","Components/WeeklyIncrease/WeeklyIncreaseAnalysis/WeeklyIncreaseAnalysis.jsx","Components/Common Components/StateSelector.jsx","Components/Theme/ChartColors.js","Components/Theme/BarChartThemeHelper.js","Components/Common Components/BarChart.jsx","Components/WeeklyIncrease/WeeklyIncreaseGraph.jsx","Components/WeeklyIncrease/WeeklyIncrease.jsx","Components/RecoveryRate/RecoveryRateDataTable.jsx","Components/RecoveryRate/RecoveryRateGraph.jsx","Components/RecoveryRate/RecoveryRate.jsx","Components/Common Components/DataTable.jsx","Components/TrafficIntensity/TrafficIntensityGraph.jsx","Components/TrafficIntensity/TrafficIntensity.jsx","Components/Concentration/ConcentrationDataTable.jsx","Components/Concentration/ConcentrationGraph.jsx","Components/Concentration/Concentration.jsx","Components/DeathRate/DeathRateDataTable.jsx","Components/DeathRate/DeathRateGraph.jsx","Components/DeathRate/DeathRate.jsx","Components/TestedPositive/TestedPostiveGraph.jsx","Components/TestedPositive/TestedPositive.jsx","Components/FAQ/FAQ.jsx","Components/About/AboutCard.jsx","Components/About/AboutPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","sidebarOptions","id","name","icon","AppContext","createContext","AppContextProvider","props","useState","theme","localStorage","getItem","currentPage","appState","setAppState","Provider","value","children","getIcon","val","useStyles","makeStyles","mainIcon","height","padding","toolbar","textAlign","getListItem","item","ListItem","selected","button","key","onClick","optionSelectedHandler","ListItemIcon","ListItemText","primary","style","color","green","DrawerContent","classes","className","curTheme","src","MainIconWhite","alt","MainIconBlack","Divider","List","options","map","index","length","Fragment","root","display","textMargin","marginTop","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","drawerPaper","boxShadow","drawerPaperDark","backgroundColor","content","flexGrow","headerIcon","ResponsiveDrawer","window","useTheme","React","mobileOpen","setMobileOpen","appDrawerProps","handleDrawerToggle","container","undefined","document","body","navBarClasses","AppBar","position","Toolbar","IconButton","aria-label","edge","fontSize","Grid","justify","Typography","variant","noWrap","themeToggleHandler","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","themeColors","light","secondary","dark","themeHelper","createMuiTheme","palette","main","type","PageSwitchHelper","pageId","WeeklyIncrease","RecoveryRate","TrafficIntensity","Concentration","TestedPositive","DeathRate","FAQ","Wrapper","AppShell","useContext","useEffect","ThemeProvider","ThemeHelper","setItem","page","customCard","transition","margin","down","minWidth","confirmed","borderBottom","active","recovered","death","iconStyle","top","CustomCard","Card","cx","cardType","CardContent","gutterBottom","title","start","end","duration","separator","valueChange","Math","abs","CardActions","disableSpacing","Button","size","startIcon","fetchSummary","a","axios","get","response","console","error","Gradient","min","float","max","backgroundImage","colors","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","pressed","colorMap","IndiaCovidMap","tooltipContent","setTooltipContent","data","heatMapData","setData","onMouseEnter","geo","current","properties","getColor","maxCount","perColorRange","finalColor","trunc","onMouseLeave","projectionConfig","projection","data-tip","geography","geographies","find","s","rsmKey","LineChartThemeHelper","chart","tools","download","dataLabels","enabled","xaxis","labels","datetimeUTC","categories","legend","itemMargin","vertical","foreColor","tooltip","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","log","addEventListener","removeEventListener","getRealWidth","LineChart","series","totalConfirmedArray","totalRecoveredArray","totalDeceasedArray","dateArray","chartData","setChartData","StyledTableCell","withStyles","head","common","black","white","TableCell","StyledTableRow","action","TableRow","SimpleDataTable","headers","TableContainer","component","Paper","Table","TableHead","align","TableBody","scope","values","StateSelector","Autocomplete","disableClearable","states","getOptionLabel","option","onChange","e","handleStateChange","defaultValue","defaultState","renderInput","params","TextField","placeholder","DashboardStatTable","Object","keys","stateData","getOptions","selectedOption","setSelectedOption","tableData","setTableData","tabdata","countryData","singleSelect","selectedState","trim","baseUrl","fetchDashboardData","fetchWeeklyIncreaseData","fetchRecoveryRateData","fetchTrafficIntensityData","fetchConcentrationData","fetchTestedPositiveData","fetchDeathRateData","text","customPanel","heading","typography","pxToRem","flexBasis","secondaryHeading","formatChartsData","timeSeriesArray","forEach","push","totalconfirmed","totaldeceased","totalrecovered","date","init","formatHeatMapData","statewiseArray","activeHeatMapData","confirmedHeatMapData","deathsHeatMapData","maxActive","maxConfirmed","maxDeaths","i","statecode","state","deaths","activeData","confirmedData","deathsActive","Dashboard","heatMapOptions","cardsData","setCardsData","chartsData","setChartsData","dashboardData","setDashboardData","setHeatMapData","expanded","setExpanded","mapOption","setMapOption","handleChangeExpanded","panel","event","isExpanded","statewise","cases_time_series","confirmedProps","deltaconfirmed","activeProps","recoveredProps","deltarecovered","deathProps","deltadeaths","responseData","alignItems","sm","md","ExpansionPanel","TransitionProps","unmountOnExit","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","FormControl","Select","labelId","target","MenuItem","table","WeeklyIncreaseDataTable","WeeklyData","weeklyData","colSpan","startDate","endDate","stateName","weeklyItem","rank","WeeklyIncreaseRatioTable","ratios","TabPanel","other","role","hidden","aria-labelledby","a11yProps","allyProps","customSelect","background","WeeklyIncreaseAnalysis","setValue","Tabs","centered","newValue","Tab","label","multiple","defaultStates","barChartThemeHelper","plotOptions","bar","horizontal","columnWidth","endingShape","distributed","stroke","show","yaxis","opacity","hideLegend","BarChart","seriesData","WeeklyGraph","stateNameArray","currentSeriesData","ratioArray","ratio","stateNames","sort","getFormattedData","filterChartData","selectedStateArray","filteredData","Box","p","setWeeklyData","LinearProgress","RecoveryRateDataTable","recoveryRate","whiteSpace","countryName","rate","recoveryItem","RecoveryRateGraph","RecoveryData","rateArray","countryRateArray","recoveryData","setRecoveryData","DataTable","category","headerRange","headerCategory1","headerCategory2","headerCategory","itemCategory","TrafficIntensityGraph","TrafficIntensityData","intensityArray","trafficIntensity","countryIntensityArray","trafficIntensityData","setTrafficIntensityData","ConcentrationDataTable","concentration","ConcentrationGraph","ConcentrationData","currentStates","stateMap","concentrationArray","allStates","slice","concentrationData","setConcentrationData","DeathRateDataTable","deathRate","deathItem","DeathRateGraph","DeathRateData","deathRateData","setDeathRateData","TestedPositiveData","testDataArray","testData","percPositive","testedPositiveData","setTestedPositiveData","questionContainer","flexWrap","answerContainer","Faq","FAQData","question","parse","answer","maxWidth","paddingTop","paddingBottom","paddingRight","paddingLeft","alignSelf","avatar","rightContent","buttonContainer","openLink","url","AboutCard","xs","Avatar","currentRole","linkedIn","github","subHeading","detailsContainer","AboutPage","contributors","Contributors","analytics","team","dev","Link","href","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3e0affda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MainIconWhite.60d7601e.svg\";","module.exports = __webpack_public_path__ + \"static/media/MainIconBlack.2ef007ba.svg\";","export const sidebarOptions = [\r\n    {id:1,name:\"Dashboard\",icon:\"dashboard\"},\r\n    {id:2,name:\"Weekly Increase\",icon:\"increase\"},\r\n    {id:3,name:\"Recovery Rate\",icon:\"recovery\"},\r\n    {id:4,name:\"Traffic Intensity\",icon:\"intensity\"},\r\n    {id:5,name:\"Concentration\",icon:\"concentration\"},\r\n    {id:6,name:\"Tested Positive\",icon:\"positive\"},\r\n    {id:7,name:\"Death Rate\",icon:\"death\"},\r\n    {id:8,name:\"FAQ\",icon:\"faq\"},\r\n    {id:9,name:\"About\",icon:\"about\"}\r\n];\r\n","import React,{useState,createContext} from 'react';\r\nimport { sidebarOptions } from \"../Data/AppElements\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = (props) => {\r\n    const light = \"light\";//default app theme\r\n    const [appState, setAppState] = useState({\r\n        theme: localStorage.getItem('theme') || light,\r\n        currentPage: sidebarOptions[0]\r\n    });\r\n    return (\r\n        <AppContext.Provider value={[appState,setAppState]}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n}","import React from 'react';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport RecoveryIcon from '@material-ui/icons/VerifiedUser';\r\nimport ConcentrationIcon from '@material-ui/icons/BubbleChart';\r\nimport HospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport CityIcon from '@material-ui/icons/EmojiTransportation';\r\nimport DeathIcon from '@material-ui/icons/Warning';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AboutIcon from '@material-ui/icons/Info';\r\nimport IntensityIcon from '@material-ui/icons/GraphicEq';\r\nimport FAQIcon from '@material-ui/icons/ContactSupport';\r\n/* Helper method to get icon based on icon name and optional props */\r\nexport const getIcon = (val, props) => {\r\n    switch (val) {\r\n        case 'dashboard':\r\n            return <DashboardIcon {...props}></DashboardIcon>;\r\n        case 'increase':\r\n            return <TrendingUpIcon {...props}></TrendingUpIcon>;\r\n        case 'recovery':\r\n            return <RecoveryIcon {...props}></RecoveryIcon>;\r\n        case 'intensity':\r\n            return <IntensityIcon {...props}></IntensityIcon>;\r\n        case 'concentration':\r\n            return <ConcentrationIcon {...props}></ConcentrationIcon>\r\n        case 'positive':\r\n            return <HospitalIcon {...props}></HospitalIcon>;\r\n        case 'city':\r\n            return <CityIcon {...props}></CityIcon>;\r\n        case 'about':\r\n            return <AboutIcon {...props}></AboutIcon>;\r\n        case 'death':\r\n            return <DeathIcon {...props}></DeathIcon>;\r\n        case 'faq':\r\n            return <FAQIcon {...props}></FAQIcon>\r\n        default:\r\n            return <TrendingUpIcon {...props}></TrendingUpIcon>;\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getIcon } from '../../Helpers/IconHelper';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { MainIconWhite, MainIconBlack } from '../../Assets';\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainIcon: {\r\n        height: '15rem',\r\n        padding: '2rem'\r\n    },\r\n    toolbar: {\r\n        textAlign: 'center'\r\n    }\r\n}));\r\nconst getListItem = (props, item) => {\r\n    if (item.id === props.currentPage.id) {\r\n        return (\r\n            <ListItem selected button key={item.id} onClick={() => props.optionSelectedHandler(item)}>\r\n                <ListItemIcon >{getIcon(item.icon)}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n            </ListItem>);\r\n    } else {\r\n        return (\r\n            <ListItem button key={item.id} onClick={() => props.optionSelectedHandler(item)}>\r\n                <ListItemIcon style={{ color: green[300] }}>{getIcon(item.icon)}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n            </ListItem>);\r\n    }\r\n}\r\nconst DrawerContent = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.toolbar}>\r\n                {props.curTheme !== \"light\" ?\r\n                    <img className={classes.mainIcon} src={MainIconWhite} alt=\"mainIcon\"></img> :\r\n                    <img className={classes.mainIcon} src={MainIconBlack} alt=\"mainIcon\"></img>}\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {props.options.map((item, index) => (\r\n                    index === props.options.length - 1 ?\r\n                        <React.Fragment key=\"fragment\">\r\n                            <Divider key=\"divider\"/>\r\n                            {getListItem(props, item)}\r\n                        </React.Fragment>\r\n                        :\r\n                        getListItem(props, item)\r\n\r\n                ))}\r\n            </List>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrawerContent;","import React from 'react';\r\nimport { AppBar, Drawer, Hidden, Toolbar, IconButton, Grid } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Light from '@material-ui/icons/Brightness7';\r\nimport Dark from '@material-ui/icons/Brightness4';\r\nimport Content from './AppDrawerContent';\r\nimport { getIcon } from '../../Helpers/IconHelper';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst drawerWidth = 242;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  textMargin: {\r\n    marginTop: 7\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    zIndex: 1101\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  drawerPaperDark:{\r\n    backgroundColor:'#333',\r\n    width: drawerWidth,\r\n    boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  headerIcon:{\r\n    marginRight:10,\r\n    color: green[300] \r\n  }\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  //Props to be sent to app drawer\r\n  const appDrawerProps = {\r\n    currentPage: props.currentPage, options: props.options,\r\n    optionSelectedHandler: props.optionSelectedHandler, curTheme: props.curTheme\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n  const navBarClasses = props.curTheme === \"light\" ? classes.drawerPaper:classes.drawerPaperDark;\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\r\n            onClick={handleDrawerToggle} className={classes.menuButton}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {getIcon(props.currentPage.icon,{className:classes.headerIcon,fontSize:\"large\"})}\r\n          <Grid justify=\"space-between\" container >            \r\n            <Grid item >\r\n              <Typography variant=\"h6\" noWrap className={classes.textMargin}>\r\n                {props.currentPage.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <div>\r\n                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Toggle Dark and Light mode\"\r\n                  onClick={() => props.themeToggleHandler()}>\r\n                  {props.curTheme === \"light\" ? <Light /> : <Dark />}\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: navBarClasses,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <Content {...appDrawerProps}></Content>\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: navBarClasses,\r\n            }}            \r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            <Content {...appDrawerProps}></Content>\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nexport const themeColors =\r\n{\r\n  light: { primary: \"#FFFFFF\", secondary: '#81c784' },\r\n  dark: { primary: \"#333\", secondary: '#81c784' }\r\n};\r\nconst themeHelper = (theme) => {\r\n  if (theme === \"light\") {\r\n    return createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: themeColors.light.primary\r\n        },\r\n        secondary: {\r\n          main: themeColors.light.secondary\r\n        },\r\n        type: \"light\"\r\n      }\r\n    });\r\n  } else {\r\n    return createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: themeColors.dark.primary\r\n        },\r\n        secondary: {\r\n          main:  themeColors.dark.secondary\r\n        },\r\n        type: \"dark\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default themeHelper;","import React from 'react';\r\nimport { WeeklyIncrease, RecoveryRate, TrafficIntensity, Concentration, DeathRate, TestedPositive, Dashboard,FAQ,AboutPage } from '../index';\r\n\r\nconst PageSwitchHelper = (props) => {\r\n    switch (props.pageId) {\r\n        case 1:\r\n            return <Dashboard theme={props.theme}></Dashboard>\r\n        case 2:\r\n            return <WeeklyIncrease theme={props.theme}></WeeklyIncrease>;\r\n        case 3:\r\n            return <RecoveryRate theme={props.theme}></RecoveryRate>;\r\n        case 4:\r\n            return <TrafficIntensity theme={props.theme}></TrafficIntensity>;\r\n        case 5:\r\n            return <Concentration theme={props.theme}></Concentration>;\r\n        case 6:\r\n            return <TestedPositive theme={props.theme}></TestedPositive>\r\n        case 7:\r\n            return <DeathRate theme={props.theme}></DeathRate>;\r\n        case 8:\r\n            return <FAQ theme={props.theme}></FAQ>\r\n        case 9:\r\n            return <AboutPage theme={props.theme}></AboutPage>\r\n        default:\r\n            return <h1>Not configured</h1>\r\n    }\r\n}\r\n\r\nexport default PageSwitchHelper;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 242;\r\nconst appBarHeight = 64;\r\nconst appBarHeightMobile = 56;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up('md')]: {\r\n      marginLeft: drawerWidth\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginTop: appBarHeight\r\n    },\r\n    marginTop: appBarHeightMobile,\r\n\r\n    background: theme.palette.primary.main\r\n  },\r\n  content: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(3)\r\n    },    \r\n    padding: theme.spacing(1)    \r\n  },\r\n}));\r\n\r\nfunction Wrapper(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <main className={classes.content}>\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useContext } from \"react\";\r\nimport { sidebarOptions } from \"../../Data/AppElements\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport ResponsiveAppDrawer from '../AppDrawer/AppDrawer';\r\nimport ThemeHelper, { themeColors } from '../Theme/ThemeHelper';\r\nimport PageSwitchHelper from '../PageSwitchHelper/PageSwitchHelper';\r\nimport Wrapper from '../../HOC/Wrapper';\r\nimport {AppContext} from '../../Context/AppContext';\r\nimport { useEffect } from \"react\";\r\n\r\nconst light = \"light\", dark = \"dark\";\r\n\r\nconst AppShell = () => {\r\n  const [appState, setAppState] = useContext(AppContext);\r\n\r\n  const setCurrentpage = (page) => {\r\n    //updating state only if selected page is different\r\n    if (page.id !== appState.currentPage.id)\r\n      setAppState({ theme: appState.theme, currentPage: page });\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (appState.theme === light) {\r\n      setAppState({ theme: dark, currentPage: appState.currentPage });\r\n      document.body.style.backgroundColor = themeColors.dark.primary;\r\n      localStorage.setItem('theme', dark);\r\n    } else {\r\n      setAppState({ theme: light, currentPage: appState.currentPage });\r\n      document.body.style.backgroundColor = themeColors.light.primary;\r\n      localStorage.setItem('theme', light);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = themeColors[appState.theme].primary;\r\n  }, [appState.theme]);\r\n\r\n  return (\r\n    <ThemeProvider theme={ThemeHelper(appState.theme)}>\r\n      <ResponsiveAppDrawer options={sidebarOptions} curTheme={appState.theme} currentPage={appState.currentPage}\r\n        themeToggleHandler={() => toggleTheme()} optionSelectedHandler={(val) => setCurrentpage(val)}></ResponsiveAppDrawer>\r\n      <Wrapper>\r\n        <PageSwitchHelper pageId={appState.currentPage.id} theme={appState.theme}></PageSwitchHelper>\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n\r\n}\r\n\r\nexport default AppShell;\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from '../../Context/AppContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Typography, CardActions, Button } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport cx from 'classnames';\r\nimport CountUp from 'react-countup';\r\nimport { getIcon } from '../../Helpers/IconHelper';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { sidebarOptions } from '../../Data/AppElements';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    textAlign: 'center'\r\n  },\r\n  customCard: {\r\n    transition: 'box-shadow .3s',\r\n    margin: '0.5em',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '46%',\r\n      minWidth: '46%'\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '95%',\r\n      minWidth: '95%'\r\n    },\r\n    width: '23%',\r\n    minWidth: '23%',\r\n    cursor: 'default',\r\n    '&:hover': {\r\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.3),0px 4px 5px 0px rgba(0,0,0,0.24),0px 1px 10px 0px rgba(0,0,0,0.22)'\r\n    }\r\n  },\r\n  confirmed: {\r\n    borderBottom: '10px solid #368bf6'\r\n  },\r\n  active: {\r\n    borderBottom: '10px solid #f2a365'\r\n  },\r\n  recovered: {\r\n    borderBottom: '10px solid #81c784'\r\n  },\r\n  death: {\r\n    borderBottom: '10px solid #eb5569'\r\n  },\r\n  iconStyle: {\r\n    fontSize: '1rem',\r\n    top: '.125em',\r\n    position: 'relative'\r\n  },\r\n\r\n}));\r\n\r\nconst CustomCard = (props) => {\r\n  const classes = useStyles();\r\n  const [appState, setAppState] = useContext(AppContext);\r\n  const displayPage = () => {\r\n    setAppState({ theme: appState.theme, currentPage: sidebarOptions[props.pageId] });\r\n  };\r\n\r\n  return (\r\n    <Card className={cx(classes.customCard, classes[props.cardType])}>\r\n      <CardContent className={classes.content}>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"h4\">\r\n          <CountUp start={0} end={+props.value} duration={1} separator=\",\" />\r\n        </Typography>\r\n        <Typography color=\"inherit\">\r\n          {props.valueChange > 0 ?\r\n            <ArrowUpwardIcon className={classes.iconStyle}></ArrowUpwardIcon> :\r\n            props.valueChange < 0 ?\r\n              <ArrowDownwardIcon className={classes.iconStyle}></ArrowDownwardIcon> : null}\r\n          {props.valueChange ? Math.abs(props.valueChange) : null}\r\n        </Typography>\r\n        {/*div for padding*/}\r\n        {props.valueChange ? null : <div style={{ height: \"24px\" }}></div>}\r\n      </CardContent>\r\n      {sidebarOptions[props.pageId] ?\r\n        <CardActions disableSpacing>\r\n          <Button size=\"small\"\r\n            onClick={() => displayPage()} startIcon={getIcon(sidebarOptions[props.pageId].icon, { style: { color: green[300] } })}>\r\n            {sidebarOptions[props.pageId].name}\r\n          </Button>\r\n        </CardActions> : null}\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomCard.propTypes = {\r\n  pageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CustomCard;","import axios from 'axios';\r\nconst url = 'https://api.covid19india.org/data.json';\r\n\r\nexport const fetchSummary = async () => {\r\n    try{\r\n        const response = await axios.get(url);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchSummary] Failed\");\r\n    }    \r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gradient = (props) => (\r\n    <React.Fragment>\r\n        <div> \r\n            <span>{props.min}</span>            \r\n            <span style={{float:'right'}}>{props.max}</span>\r\n        </div>\r\n        <div style={{ backgroundImage: `linear-gradient(to right, ${[...props.colors]})`, height: '25px', width: '100%', marginTop: '20px' }}></div>\r\n    </React.Fragment>\r\n);\r\n\r\nGradient.propTypes = {\r\n    colors: PropTypes.object.isRequired\r\n};\r\nexport default Gradient;","import React, { useState, useEffect } from 'react';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Gradient from './Gradient';\r\n/**\r\n* Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\r\n*/\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\nconst PROJECTION_CONFIG = {\r\n  scale: 900,\r\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  \"#FFE6E6\", \"#FFCCCC\", \"#FFB3B3\", \"#FF9999\", \"#FF8080\",\r\n  \"#FF6666\", \"#FF4D4D\", \"#FF3333\", \"#FF1A1A\", \"#FF0000\",\r\n  \"#E60000\", \"#CC0000\", \"#B30000\", \"#990000\", \"#800000\", \r\n  \"#660000\",\"#4C0000\", \"#330000\", \"#190000\", \"#000000\"\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: 'none'\r\n  },\r\n  hover: {\r\n    fill: '#ccc',\r\n    transition: 'all 250ms',\r\n    outline: 'none'\r\n  },\r\n  pressed: {\r\n    outline: 'none'\r\n  }\r\n};\r\n\r\nlet colorMap = {};\r\nfunction IndiaCovidMap(props) {\r\n  const [tooltipContent, setTooltipContent] = useState('');\r\n  const [data, setData] = useState(props.data.heatMapData);\r\n\r\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n    return () => {\r\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n    };\r\n  };\r\n  \r\n  const getColor=(value,maxCount)=>{\r\n    //console.log(colorMap[value]);\r\n    if(colorMap[value]){\r\n      //if color is already calculated once , no need to recalculate\r\n      return colorMap[value];\r\n    }\r\n    const perColorRange = maxCount/COLOR_RANGE.length;    \r\n    const finalColor = COLOR_RANGE[Math.trunc(value/perColorRange)];\r\n    colorMap[value] = finalColor;\r\n    //console.log(\"Value : \"+value+\" Max : \"+maxCount+\"final Color:\"+finalColor);\r\n    return finalColor;\r\n  }\r\n  const onMouseLeave = () => {\r\n    setTooltipContent('');\r\n  };\r\n  useEffect(() => {\r\n    setData(props.data.heatMapData);\r\n  },[props.data]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n      <ComposableMap\r\n        projectionConfig={PROJECTION_CONFIG}\r\n        projection=\"geoMercator\"\r\n        width={600}\r\n        height={500}\r\n        data-tip=\"\"\r\n      >\r\n        <Geographies geography={INDIA_TOPO_JSON}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              //console.log(geo.id);\r\n              const current = data.find(s => s.id === geo.id);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={current ? getColor(current.value,props.data.max) : DEFAULT_COLOR}\r\n                  style={geographyStyle}\r\n                  onMouseEnter={onMouseEnter(geo, current)}\r\n                  onMouseLeave={onMouseLeave}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n      <Gradient colors={COLOR_RANGE} min={0} max={props.data.max} ></Gradient>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default IndiaCovidMap;\r\n","const LineChartThemeHelper = (data) => {\r\n    let options = {\r\n        chart: {\r\n            height: 350,\r\n            type: 'line',\r\n            toolbar: {\r\n                tools: {\r\n                    download: false\r\n                }\r\n            }\r\n        },\r\n        colors: ['#368bf6', '#81c784', '#eb5569'],\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n            labels: {\r\n                datetimeUTC: false\r\n            },\r\n            categories: data.categories\r\n        },\r\n        legend: {\r\n            itemMargin: {\r\n                vertical: 10\r\n            }\r\n        }\r\n    }\r\n    if (data.theme !== \"light\") {\r\n        options.chart.foreColor = '#FFFFFF';\r\n    } else {\r\n        options.chart.foreColor = '#373d3f';\r\n    }\r\n    options.tooltip = { theme: data.theme };\r\n    return options;\r\n};\r\n\r\nexport default LineChartThemeHelper;\r\n","const debounce = (func, wait, immediate) => {\r\n    var timeout;\r\n    return function() {\r\n        var context = this, args = arguments;\r\n        var later = function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    }\r\n}\r\n\r\nexport default debounce;","import { useState, useEffect } from 'react';\r\nimport debounce from './Debounce';\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    const handleResize = debounce(function() {\r\n      console.log(\"window resized\");\r\n      setWindowDimensions(getWindowDimensions());\r\n    },200);\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport LineChartThemeHelper from '../Theme/LineChartThemeHelper';\r\nimport useWindowDimensions from '../../Helpers/WindowDimensionHelper';\r\n\r\nconst LineChart = (props) => {\r\n    const { height, width } = useWindowDimensions();\r\n    const [chartData, setChartData] = useState({\r\n        series: [{\r\n            name: 'Confirmed',\r\n            data: props.data.totalConfirmedArray\r\n        },\r\n        {\r\n            name: 'Recovery',\r\n            data: props.data.totalRecoveredArray\r\n        },\r\n        {\r\n            name: 'Deceased',\r\n            data: props.data.totalDeceasedArray\r\n        }],\r\n        options: LineChartThemeHelper({\r\n            categories: props.data.dateArray,            \r\n            theme: props.theme\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(\"[BarChart] useEffect called\");\r\n        setChartData({ \r\n            series: [{\r\n                name: 'Confirmed',\r\n                data: props.data.totalConfirmedArray\r\n            },\r\n            {\r\n                name: 'Recovery',\r\n                data: props.data.totalRecoveredArray\r\n            },\r\n            {\r\n                name: 'Deceased',\r\n                data: props.data.totalDeceasedArray\r\n            }],           \r\n            options: LineChartThemeHelper({\r\n                categories: props.data.dateArray,            \r\n                theme: props.theme\r\n            })\r\n        });\r\n    }, [props]);\r\n    \r\n\r\n    return <ReactApexChart style={{ marginTop: \"9px\", marginLeft: \"-5px\" }} width={getRealWidth(width)}\r\n        height={0.65 * height} options={chartData.options} series={chartData.series} type=\"line\" />\r\n}\r\nconst getRealWidth = (width) => {\r\n    if (width > 650 && width < 960) {\r\n        return width - 80;\r\n    } else if (width >= 960) {\r\n        return width - 320;\r\n    } else {\r\n        return width - 50;\r\n    }\r\n}\r\nexport default LineChart;","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function SimpleDataTable(props) {  \r\n  const { headers, data } = { ...props.data };\r\n  return (\r\n    <TableContainer style={{marginTop:15}} component={Paper}>\r\n      <Table aria-label=\"Custom Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {headers.map((item, index) => {              \r\n                return <StyledTableCell align=\"center\" key={index}>{item}</StyledTableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>        \r\n          {data.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.name}\r\n              </StyledTableCell>\r\n              {item.values.map((item, index) => (\r\n                <StyledTableCell align=\"center\" key={index}>\r\n                  {item ? item : \"N/A\"}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StateSelector(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        disableClearable\r\n        id=\"single-state-selector\"\r\n        options={props.states}\r\n        getOptionLabel={(option) => option}\r\n        onChange={(e, value) => props.handleStateChange(value)}\r\n        defaultValue={props.defaultState}\r\n        renderInput={(params) => (\r\n          <TextField {...params} color=\"secondary\" variant=\"outlined\" placeholder=\"Select State..\" />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport DashboardTable from '../Common Components/SimpleDataTable';\r\nimport StateSelector from '../Common Components/SingleStateSelector';\r\n\r\nconst getOptions = (props) => {\r\n    const options = Object.keys(props.data.content.stateData)\r\n    return [\"India\", ...options];\r\n}\r\n\r\nconst DashboardStatTable = (props) => {\r\n    const options = getOptions(props);\r\n    const [selectedOption, setSelectedOption] = useState(options[0]);\r\n    const [tableData,setTableData] = useState(null);\r\n    const handleChange = (value) => {\r\n        if(value && value.trim().length > 0)\r\n            setSelectedOption(value);\r\n        else\r\n            setSelectedOption(options[0]);\r\n    };\r\n    useEffect(()=>{\r\n        console.log(\"[DashboardStatTable] useEffect called\");\r\n        let tabdata = {\"headers\":props.data.headers};\r\n        if(selectedOption === \"India\"){            \r\n            tabdata.data = props.data.content.countryData;   \r\n            console.log(\"selected Option : \"+selectedOption);\r\n            console.log(tabdata.data);         \r\n        }else{\r\n            tabdata.data = props.data.content.stateData[selectedOption].data;\r\n            console.log(\"selected Option : \"+selectedOption);\r\n            console.log(tabdata.data);\r\n        }\r\n        setTableData(tabdata);\r\n    },[selectedOption,props]);\r\n    return (\r\n        <React.Fragment>\r\n            <StateSelector \r\n            style={{marginTop:10}}\r\n            defaultState={options[0]} \r\n            states={options} \r\n            singleSelect={true}\r\n            handleStateChange={(selectedState) => handleChange(selectedState)}></StateSelector>           \r\n            {tableData ? <DashboardTable data={tableData}></DashboardTable>:null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DashboardStatTable;","import axios from 'axios';\r\nconst baseUrl = 'https://raw.githubusercontent.com/praty94/covid-data-isi/master/Statistical%20Data';\r\n\r\nexport const fetchDashboardData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/OverallData.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchDashboardData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchWeeklyIncreaseData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/WeeklyRateOfIncrease.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchWeeklyIncreaseData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchRecoveryRateData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/RecoveryRate.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchRecoveryRateData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchTrafficIntensityData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/TrafficIntensity.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchTrafficIntensityData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchConcentrationData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/Concentration.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchConcentrationData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchTestedPositiveData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/TestingStateData.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchTestedPositiveData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchDeathRateData = async () => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/DeathRate.json`);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchDeathRateData] Failed\");\r\n    }    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '../Card/Card';\r\nimport { fetchSummary } from '../../Api/Covid19India';\r\nimport IndiaCovidMap from '../IndiaCovidMap/IndiaCovidMap';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n    ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary,\r\n    MenuItem, FormControl, Select, Grid,Typography, Divider\r\n} from '@material-ui/core';\r\nimport LineChart from '../Common Components/LineChart';\r\nimport DashboardStatTable from './DashboardStatTable';\r\nimport {fetchDashboardData} from '../../Api/ISI_StatisticalData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    customPanel: {\r\n        display: 'block'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\nconst formatChartsData = (timeSeriesArray) => {\r\n    let totalConfirmedArray = [], totalDeceasedArray = [], totalRecoveredArray = [], dateArray = [];\r\n    if (timeSeriesArray && timeSeriesArray.length) {\r\n        timeSeriesArray.forEach((item) => {\r\n            totalConfirmedArray.push(+item.totalconfirmed);\r\n            totalDeceasedArray.push(+item.totaldeceased);\r\n            totalRecoveredArray.push(+item.totalrecovered);\r\n            dateArray.push(item.date + \" 2020\");\r\n        });        \r\n    }\r\n    return { init: true, totalConfirmedArray, totalDeceasedArray, totalRecoveredArray, dateArray };\r\n}\r\nconst formatHeatMapData = (statewiseArray) => {\r\n    let activeHeatMapData = [], confirmedHeatMapData = [], deathsHeatMapData = [];\r\n    let maxActive = 0, maxConfirmed = 0, maxDeaths = 0;\r\n    //starting mapping from index 1 since the first index is always the overall country status\r\n    for (let i = 1; i < statewiseArray.length; i++) {\r\n        activeHeatMapData.push({ id: statewiseArray[i].statecode, state: statewiseArray[i].state, value: statewiseArray[i].active });\r\n        confirmedHeatMapData.push({ id: statewiseArray[i].statecode, state: statewiseArray[i].state, value: statewiseArray[i].confirmed });\r\n        deathsHeatMapData.push({ id: statewiseArray[i].statecode, state: statewiseArray[i].state, value: statewiseArray[i].deaths });\r\n\r\n        maxActive = Math.max(maxActive, statewiseArray[i].active);\r\n        maxConfirmed = Math.max(maxConfirmed, statewiseArray[i].confirmed);\r\n        maxDeaths = Math.max(maxDeaths, statewiseArray[i].deaths);\r\n    }\r\n    return {\r\n        activeData: { heatMapData : activeHeatMapData, max : maxActive },\r\n        confirmedData: { heatMapData : confirmedHeatMapData, max : maxConfirmed },\r\n        deathsActive: { heatMapData : deathsHeatMapData, max : maxDeaths }, init: true\r\n    };\r\n}\r\nexport default function Dashboard(props) {\r\n    const classes = useStyles();\r\n    const heatMapOptions = ['confirmedData','activeData','deathsActive'];\r\n    const [cardsData, setCardsData] = useState({});\r\n    const [chartsData, setChartsData] = useState({});\r\n    const [dashboardData, setDashboardData] = useState({});\r\n    const [heatMapData, setHeatMapData] = useState({});\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [mapOption, setMapOption] = useState(heatMapOptions[0]);\r\n    const handleChangeExpanded = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setMapOption(event.target.value);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetchSummary();\r\n            if (!response || !response.data)\r\n                return;\r\n            const { statewise, cases_time_series } = { ...response.data };\r\n\r\n            setCardsData({\r\n                confirmedProps: { cardType: \"confirmed\", pageId:1, title: \"Confirmed\", value: statewise[0].confirmed, valueChange: statewise[0].deltaconfirmed },\r\n                activeProps: { cardType: \"active\", pageId:4, title: \"Active\", value: statewise[0].active },\r\n                recoveredProps: { cardType: \"recovered\",pageId:2, title: \"Recovered\", value: statewise[0].recovered, valueChange: statewise[0].deltarecovered },\r\n                deathProps: { cardType: \"death\",pageId:6, title: \"Deceased\", value: statewise[0].deaths, valueChange: statewise[0].deltadeaths },\r\n            });\r\n            setChartsData(formatChartsData(cases_time_series));\r\n\r\n            setHeatMapData(formatHeatMapData(statewise));\r\n        })();\r\n        (async () => {\r\n            const responseData = await fetchDashboardData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n            \r\n            setDashboardData(responseData.data);\r\n            \r\n        })();\r\n        return () => {\r\n            console.log(\"[Dashboard] unmounted\");\r\n        };\r\n    }, []);    \r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h6\" color=\"textPrimary\">Covid 19 Summary</Typography>\r\n            <Typography color=\"textSecondary\">India</Typography>\r\n            <Divider></Divider>\r\n            <Grid container direction=\"column\">\r\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                    {cardsData.confirmedProps ?\r\n                        <React.Fragment>\r\n                            <Card item sm={6} md={3} {...cardsData.confirmedProps}></Card>\r\n                            <Card item sm={6} md={3} {...cardsData.activeProps}></Card>\r\n                            <Card item sm={6} md={3} {...cardsData.recoveredProps}></Card>\r\n                            <Card item sm={6} md={3} {...cardsData.deathProps}></Card>\r\n                        </React.Fragment> : null}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <div style={{ marginTop: 20 }}>\r\n                {chartsData && chartsData.init ?\r\n                    <ExpansionPanel TransitionProps={{ unmountOnExit: true }} expanded={expanded === 'panel1'} onChange={handleChangeExpanded('panel1')}>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\">\r\n                            <Typography className={classes.heading}>Covid 19 Time Series Graph - India [TBD]</Typography>\r\n                            {expanded === 'panel1' ? null : <Typography className={classes.secondaryHeading}>Tap to expand\r\n                                        </Typography>}\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails className={classes.customPanel}>\r\n                            <LineChart data={chartsData} theme={props.theme}></LineChart>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    : null}\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n                {heatMapData.init ?\r\n                    <ExpansionPanel TransitionProps={{ unmountOnExit: true }} expanded={expanded === 'panel2'} onChange={handleChangeExpanded('panel2')}>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2bh-content\"\r\n                            id=\"panel2bh-header\">\r\n                            <Typography className={classes.heading}>Covid 19 Map - India [TBD]</Typography>\r\n                            {expanded === 'panel2' ? null : <Typography className={classes.secondaryHeading}>Tap to expand\r\n                                                    </Typography>}\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails className={classes.customPanel}>\r\n                            <FormControl style={{ width: 250 }} variant=\"outlined\">\r\n                                <Select\r\n                                    labelId=\"heatmap-select-labelId\"\r\n                                    id=\"heatmap-select-id\"\r\n                                    value={mapOption}\r\n                                    onChange={handleChange}>\r\n                                    <MenuItem value={heatMapOptions[0]}>Confirmed</MenuItem>\r\n                                    <MenuItem value={heatMapOptions[1]}>Active</MenuItem>\r\n                                    <MenuItem value={heatMapOptions[2]}>Deceased</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <IndiaCovidMap data={heatMapData[mapOption]}></IndiaCovidMap>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    : null}\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n                {dashboardData && dashboardData.data?\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }} expanded={expanded === 'panel3'}\r\n                    onChange={handleChangeExpanded('panel3')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel3bh-content\"\r\n                        id=\"panel3bh-header\">\r\n                        <Typography className={classes.heading}>Covid 19 Comparision data [TBD]</Typography>\r\n                        {expanded === 'panel3' ? null : <Typography className={classes.secondaryHeading}>Tap to expand\r\n                                                    </Typography>}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails className={classes.customPanel}>\r\n                        <DashboardStatTable data={dashboardData.data}></DashboardStatTable>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>:null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n});\r\n\r\nexport default function WeeklyIncreaseDataTable(props) {\r\n  const classes = useStyles();\r\n  const WeeklyData = props.data;\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"WeeklyIncrease table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell></StyledTableCell>\r\n            {WeeklyData.data.stateData[0].weeklyData.map((item, index) => (\r\n              <StyledTableCell align=\"center\" colSpan={2} key={index}>{item.startDate} <br />to<br /> {item.endDate}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n          <TableRow>\r\n            {WeeklyData.data.headers.map((item, index) => {\r\n              return (\r\n                index === 0 ? \r\n                <StyledTableCell key={index}>\r\n                  {item}\r\n                </StyledTableCell> :\r\n                <StyledTableCell align=\"center\" key={index}>\r\n                    {item}\r\n                </StyledTableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {WeeklyData.data.stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item.weeklyData.map((weeklyItem, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <StyledTableCell align=\"center\">\r\n                      {weeklyItem.value}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      {weeklyItem.rank}\r\n                    </StyledTableCell>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function WeeklyIncreaseRatioTable(props) {\r\n  const WeeklyData = props.data;\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Weekly increase ratio table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>\r\n            {WeeklyData.data.stateData[0].ratios.map((item, index) => (\r\n              <StyledTableCell align=\"center\" key={index}>{item.name}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {WeeklyData.data.stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item.ratios.map((weeklyItem, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <StyledTableCell align=\"center\">\r\n                      {weeklyItem.value ? weeklyItem.value : \"N/A\"}\r\n                    </StyledTableCell>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport WeeklyIncreaseDataTable from './WeeklyIncreaseDataTable';\r\nimport WeeklyIncreaseRatioTable from './WeeklyIncreaseRatioTable';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`weeklyIncreaseAnalysis-tabpanel-${index}`}\r\n            aria-labelledby={`weeklyIncreaseAnalysis-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n               <div style={{marginTop:10}}>\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index,value,classes) {\r\n    let allyProps = {\r\n        id: `weeklyIncreaseAnalysis-tab-${index}`,\r\n        'aria-controls': `weeklyIncreaseAnalysis-tabpanel-${index}`\r\n    }\r\n    if(index === value)\r\n        allyProps.className = classes.customSelect;\r\n\r\n    return allyProps;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    customSelect:{\r\n        borderBottom:'2px solid #7a85ff!important'\r\n    }\r\n}));\r\n\r\nexport default function WeeklyIncreaseAnalysis(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs centered value={value} onChange={handleChange} aria-label=\"weeklyIncreaseAnalysis tabs\" variant=\"fullWidth\">\r\n                    <Tab label=\"Count\" {...a11yProps(0,value,classes)}/>\r\n                    <Tab label=\"Ratio\" {...a11yProps(1,value,classes)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <WeeklyIncreaseDataTable data={props.data}></WeeklyIncreaseDataTable>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <WeeklyIncreaseRatioTable data={props.data}></WeeklyIncreaseRatioTable>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StateSelector(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        multiple        \r\n        id=\"multiple-state-selector\"\r\n        options={props.states}\r\n        getOptionLabel={(option) => option}      \r\n        onChange={(e,value)=>props.handleStateChange(value)}\r\n        defaultValue={props.defaultStates}\r\n        renderInput={(params) => (\r\n          <TextField {...params} color=\"secondary\" variant=\"outlined\" label=\"States\" placeholder=\"Select States..\" />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","export const colors = [\r\n    \"#16a085\",\r\n    \"#2ecc71\",\r\n    \"#f1c40f\",\r\n    \"#f39c12\",\r\n    \"#d35400\",\r\n    \"#e67e22\",\r\n    \"#c0392b\",\r\n    \"#2980b9\",\r\n    \"#9b59b6\",\r\n    \"#34495e\",\r\n    \"#ff9ff3\",\r\n    \"#00d2d3\",\r\n    \"#feca57\",\r\n    \"#54a0ff\",\r\n    \"#5f27cd\",\r\n    \"#48dbfb\",\r\n    \"#1dd1a1\",\r\n    \"#576574\",\r\n    \"#222f3e\",\r\n    \"#b71540\",\r\n    \"#0c2461\",\r\n    \"#6a89cc\"\r\n  ];\r\n  ","import {colors} from './ChartColors';\r\nconst barChartThemeHelper = (data) => {    \r\n    let options = {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350\r\n        },        \r\n        colors:colors,\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: !!data.horizontal,\r\n                columnWidth: '55%',\r\n                endingShape: 'rounded',\r\n                distributed: !!data.distributed\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent']\r\n        },\r\n        xaxis: {\r\n            categories: data.categories,\r\n        },\r\n        yaxis:{},\r\n        fill: {\r\n            opacity: 1\r\n        },\r\n        legend: {\r\n            show:!!!data.hideLegend,\r\n            itemMargin: {\r\n              vertical: 5\r\n            }\r\n        },\r\n    }\r\n\r\n    if (data.theme !== \"light\") {\r\n        options.chart.foreColor = '#FFFFFF';\r\n    } else {\r\n        options.chart.foreColor = '#373d3f'; \r\n    }\r\n    \r\n    options.tooltip = { theme: data.theme };\r\n    return options;\r\n}\r\nexport default barChartThemeHelper;","import React, { useState, useEffect } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport barChartThemeHelper from '../Theme/BarChartThemeHelper';\r\nimport useWindowDimensions from '../../Helpers/WindowDimensionHelper';\r\n\r\nconst BarChart = (props) => {\r\n    const { height, width } = useWindowDimensions();\r\n    const [chartData, setChartData] = useState({\r\n        series: props.seriesData,\r\n        options: barChartThemeHelper({\r\n            categories: props.categories,\r\n            distributed: props.distributed,\r\n            theme: props.theme,\r\n            hideLegend:props.hideLegend,\r\n            horizontal: props.horizontal\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(\"[BarChart] useEffect called\");\r\n        setChartData({\r\n            series: props.seriesData,\r\n            options: barChartThemeHelper({\r\n                categories: props.categories,\r\n                distributed: props.distributed,\r\n                theme: props.theme,\r\n                hideLegend:props.hideLegend,\r\n                horizontal: props.horizontal\r\n            })\r\n        });\r\n    }, [props]);\r\n\r\n    return <ReactApexChart style={{ marginTop: \"9px\", marginLeft: \"-5px\" }} width={getRealWidth(width)}\r\n        height={0.65 * height} options={chartData.options} series={chartData.series} type=\"bar\" />\r\n}\r\nconst getRealWidth = (width) => {\r\n    if (width > 650 && width < 960) {\r\n        return width - 80;\r\n    } else if (width >= 960) {\r\n        return width - 320;\r\n    } else {\r\n        return width - 50;\r\n    }\r\n}\r\nexport default BarChart;","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport WeeklyBarChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (WeeklyData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [],defaultStates=[],currentSeriesData=[];\r\n    let index = 0;\r\n    WeeklyData.data.stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let ratioArray = [];\r\n        item.ratios.forEach((ratio) => {\r\n            ratioArray.push(ratio.value);\r\n            if (index === 0)\r\n                categories.push(ratio.name);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if(index<5){\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({name: item.stateName, data: ratioArray});\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: ratioArray };\r\n    });\r\n    return { stateNames: stateNameArray.sort(),seriesData,currentSeriesData, categories,defaultStates };\r\n}\r\n\r\n\r\n\r\nconst WeeklyGraph = (props) => {\r\n    const { stateNames, seriesData,currentSeriesData, categories,defaultStates } = getFormattedData(props.data);\r\n    const [chartData,setChartData] = useState({currentSeriesData});    \r\n    const filterChartData = (selectedStateArray)=>{        \r\n        let filteredData = [];        \r\n        for(let i=0;i<selectedStateArray.length;i++){\r\n            if(seriesData[selectedStateArray[i]]){\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {        \r\n        console.log(selectedStateArray);\r\n        setChartData({currentSeriesData : filterChartData(selectedStateArray)});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <WeeklyBarChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></WeeklyBarChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default WeeklyGraph;","import React, { useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Typography, Tabs, Tab, Box, LinearProgress } from '@material-ui/core';\r\nimport WeeklyIncreaseAnalysis from './WeeklyIncreaseAnalysis/WeeklyIncreaseAnalysis';\r\nimport WeeklyGraph from './WeeklyIncreaseGraph';\r\nimport { fetchWeeklyIncreaseData } from '../../Api/ISI_StatisticalData';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`weeklyIncrease-tabpanel-${index}`}\r\n            aria-labelledby={`weeklyIncrease-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `weeklyIncrease-tab-${index}`,\r\n        'aria-controls': `weeklyIncrease-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function WeeklyIncrease(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [weeklyData, setWeeklyData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchWeeklyIncreaseData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setWeeklyData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[WeeklyIncrease] unmounted\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        weeklyData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textSecondary\">{weeklyData.heading}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"weeklyIncrease tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Analysis\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <WeeklyGraph theme={props.theme} data={weeklyData}></WeeklyGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <WeeklyIncreaseAnalysis data={weeklyData}></WeeklyIncreaseAnalysis>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment>\r\n            : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function RecoveryRateDataTable(props) {  \r\n  const { countryData, stateData } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Recovery Rate Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>\r\n            {stateData[0].recoveryRate.map((item, index) => (\r\n              <StyledTableCell style={{whiteSpace:\"nowrap\"}} align=\"center\" key={index}>{item.date}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <StyledTableRow key=\"countryRow\">\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {countryData.countryName}\r\n            </StyledTableCell>\r\n            {countryData.recoveryRate.map((item,index) => (\r\n              <StyledTableCell align=\"center\" key={index}> {item.rate} </StyledTableCell>\r\n            ))}\r\n          </StyledTableRow>\r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item.recoveryRate.map((recoveryItem, index) => (\r\n                    <StyledTableCell align=\"center\" key={index}>\r\n                      {recoveryItem.rate ? recoveryItem.rate : \"N/A\"}\r\n                    </StyledTableCell>                  \r\n                ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport BarChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (RecoveryData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const {stateData,countryData} = {...RecoveryData.data}\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let rateArray = [];\r\n        item.recoveryRate.forEach((item) => {\r\n            rateArray.push(item.rate);\r\n            if (index === 0)\r\n                categories.push(item.date);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: rateArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: rateArray };\r\n    });\r\n    //Mapping data for india\r\n    let countryRateArray = [];\r\n    countryData.recoveryRate.forEach((item) => {\r\n        countryRateArray.push(item.rate);\r\n    });\r\n    //mapping data wih state name so that it can be retrieved in O(1)\r\n    seriesData[countryData.countryName] = { name: countryData.countryName, data: countryRateArray };\r\n    return { stateNames: [countryData.countryName,...stateNameArray.sort()], seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\n\r\n\r\nconst RecoveryRateGraph = (props) => {    \r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <BarChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></BarChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default RecoveryRateGraph;","import React, { useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport RecoveryRateDataTable from './RecoveryRateDataTable';\r\nimport RecoveryRateGraph from './RecoveryRateGraph';\r\nimport { fetchRecoveryRateData } from '../../Api/ISI_StatisticalData';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`recoveryRate-tabpanel-${index}`}\r\n            aria-labelledby={`recoveryRate-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `recoveryRate-tab-${index}`,\r\n        'aria-controls': `recoveryRate-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n    icon: {\r\n        height: 20,\r\n        color: '#fff'\r\n    }\r\n}));\r\n\r\nexport default function RecoveryRate(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [recoveryData, setRecoveryData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchRecoveryRateData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setRecoveryData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Recovery Rate] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        recoveryData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textSecondary\">{recoveryData.heading}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"recoveryRate tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Analysis\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <RecoveryRateGraph theme={props.theme} data={recoveryData}></RecoveryRateGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <RecoveryRateDataTable data={recoveryData.data}></RecoveryRateDataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function DataTable(props) {\r\n  \r\n  const { countryData, stateData } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table  aria-label=\"Custom Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>\r\n            {stateData[0][props.category].map((item, index) => {\r\n              if (props.headerRange)//If headerRange is specified table expects 2 header categories \"start\" to \"end\"\r\n                return (\r\n                  <StyledTableCell style={{ whiteSpace:'nowrap'}} align=\"center\" key={index}>\r\n                    {item[props.headerCategory1]}<br />to<br />{item[props.headerCategory2]}\r\n                  </StyledTableCell>);\r\n              else\r\n                return <StyledTableCell align=\"center\" key={index}>{item[props.headerCategory]}</StyledTableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {countryData && countryData.countryName ?\r\n            <StyledTableRow key=\"countryRow\">\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {countryData.countryName}\r\n              </StyledTableCell>\r\n              {countryData[props.category].map((item) => (\r\n                <StyledTableCell align=\"center\"> {item[props.itemCategory]} </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow> : null}\r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item[props.category].map((recoveryItem, index) => (\r\n                <StyledTableCell align=\"center\" key={index}>\r\n                  {recoveryItem[props.itemCategory] ? recoveryItem[props.itemCategory] : \"N/A\"}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport TrafficIntensityChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (TrafficIntensityData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const {stateData,countryData} = {...TrafficIntensityData.data}\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let intensityArray = [];\r\n        item.trafficIntensity.forEach((item) => {\r\n            intensityArray.push(item.value);\r\n            if (index === 0)\r\n                categories.push(item.name);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: intensityArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: intensityArray };\r\n    });\r\n    //Mapping data for india\r\n    let countryIntensityArray = [];\r\n    countryData.trafficIntensity.forEach((item) => {\r\n        countryIntensityArray.push(item.value);\r\n    });\r\n    //mapping data wih state name so that it can be retrieved in O(1)\r\n    seriesData[countryData.countryName] = { name: countryData.countryName, data: countryIntensityArray };\r\n    return { stateNames: [countryData.countryName,...stateNameArray.sort()], seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\nconst TrafficIntensityGraph = (props) => {\r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <TrafficIntensityChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></TrafficIntensityChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default TrafficIntensityGraph;","import React,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport DataTable from '../Common Components/DataTable';\r\nimport TrafficIntensityGraph from './TrafficIntensityGraph';\r\nimport { fetchTrafficIntensityData } from '../../Api/ISI_StatisticalData';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`trafficIntensity-tabpanel-${index}`}\r\n            aria-labelledby={`trafficIntensity-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `trafficIntensity-tab-${index}`,\r\n        'aria-controls': `trafficIntensity-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function TrafficIntensity(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [trafficIntensityData, setTrafficIntensityData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchTrafficIntensityData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setTrafficIntensityData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Traffic Intensity] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        trafficIntensityData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textSecondary\"> {trafficIntensityData.heading}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"trafficIntensity tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Analysis\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TrafficIntensityGraph data={trafficIntensityData} theme={props.theme}></TrafficIntensityGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <DataTable data={trafficIntensityData.data} category=\"trafficIntensity\" headerCategory=\"name\" itemCategory=\"value\"></DataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function ConcentrationDataTable(props) {\r\n \r\n  const { stateData } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Concentration Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>            \r\n            <StyledTableCell align=\"center\">Concentration</StyledTableCell>            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>          \r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {item.concentration}\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport BarChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (ConcentrationData) => {\r\n    let stateMap = {}, concentrationArray = [], allStates = [],defaultStates=[], currentStates = [], currentSeriesData = [];\r\n    const { stateData } = { ...ConcentrationData.data }\r\n    stateData.forEach((item) => {\r\n        allStates.push(item.stateName);\r\n        concentrationArray.push(item.concentration);\r\n        stateMap[item.stateName] = item.concentration;\r\n    });\r\n    \r\n    //extracting first 5 states\r\n    currentSeriesData = [{ name: \"Concentration\", data: [...concentrationArray].slice(0, 5) }];\r\n    currentStates = defaultStates = [...allStates].slice(0, 5);\r\n\r\n    return { stateNames: allStates.sort(), stateMap, currentSeriesData, currentStates,defaultStates };\r\n}\r\n\r\n\r\n\r\nconst ConcentrationGraph = (props) => {\r\n    const { stateNames, stateMap, currentSeriesData, currentStates,defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData,currentStates });\r\n    \r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [],currentStates=[];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (stateMap[selectedStateArray[i]]) {\r\n                filteredData.push(stateMap[selectedStateArray[i]]);\r\n                currentStates.push(selectedStateArray[i]);\r\n            }\r\n        }\r\n        return {seriesData : [{ name: \"Concentration\", data: filteredData}],currentStates};\r\n    }\r\n    \r\n    const handleStateChange = (selectedStateArray) => {\r\n        const {seriesData,currentStates} = filterChartData(selectedStateArray);\r\n        console.log(currentStates);\r\n        setChartData({ currentSeriesData:seriesData,currentStates});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <BarChart distributed={true} horizontal={true} hideLegend={true} theme={props.theme} seriesData={chartData.currentSeriesData} categories={chartData.currentStates}></BarChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ConcentrationGraph;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport ConcentrationDataTable from './ConcentrationDataTable';\r\nimport ConcentrationGraph from './ConcentrationGraph';\r\nimport { fetchConcentrationData } from '../../Api/ISI_StatisticalData';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`concentration-tabpanel-${index}`}\r\n            aria-labelledby={`concentration-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `concentration-tab-${index}`,\r\n        'aria-controls': `concentration-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function Concentration(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [concentrationData, setConcentrationData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchConcentrationData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setConcentrationData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Concentration] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        concentrationData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textSecondary\">{concentrationData.heading}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"concentration tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Analysis\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <ConcentrationGraph data={concentrationData} theme={props.theme}></ConcentrationGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <ConcentrationDataTable data={concentrationData.data}></ConcentrationDataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nexport default function DeathRateDataTable(props) {\r\n  \r\n  const { countryData, stateData } = { ...props.data };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"Recovery Rate Data table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>State / UT</StyledTableCell>\r\n            {stateData[0].deathRate.map((item, index) => (\r\n              <StyledTableCell style={{whiteSpace:\"nowrap\"}} align=\"center\" key={index}>{item.date}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {countryData.countryName ? \r\n          <StyledTableRow key=\"countryRow\">\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {countryData.countryName}\r\n            </StyledTableCell>\r\n            {countryData.deathRate.map((item,index) => (\r\n              <StyledTableCell align=\"center\" key={index}> {item.rate} </StyledTableCell>\r\n            ))}\r\n          </StyledTableRow> : null}\r\n          {stateData.map((item, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {item.stateName}\r\n              </StyledTableCell>\r\n              {item.deathRate.map((deathItem, index) => (\r\n                    <StyledTableCell align=\"center\" key={index}>\r\n                      {deathItem.rate ? deathItem.rate : \"N/A\"}\r\n                    </StyledTableCell>                  \r\n                ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport BarChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (DeathRateData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const { stateData } = { ...DeathRateData.data }\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let rateArray = [];\r\n        item.deathRate.forEach((item) => {\r\n            rateArray.push(item.rate);\r\n            if (index === 0)\r\n                categories.push(item.date);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: rateArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: rateArray };\r\n    });\r\n    \r\n    return { stateNames: stateNameArray.sort(), seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\nconst DeathRateGraph = (props) => {\r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <BarChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></BarChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DeathRateGraph;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport DeathRateDataTable from './DeathRateDataTable';\r\nimport DeathRateGraph from './DeathRateGraph';\r\nimport { fetchDeathRateData } from '../../Api/ISI_StatisticalData';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`DeathRate-tabpanel-${index}`}\r\n            aria-labelledby={`DeathRate-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `DeathRate-tab-${index}`,\r\n        'aria-controls': `DeathRate-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function DeathRate(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [deathRateData, setDeathRateData] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchDeathRateData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setDeathRateData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Death Rate] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        deathRateData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textSecondary\">{deathRateData.heading}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"deathRate tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Analysis\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <DeathRateGraph data={deathRateData} theme={props.theme}></DeathRateGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <DeathRateDataTable data={deathRateData.data}></DeathRateDataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport StateSelector from '../Common Components/StateSelector';\r\nimport TrafficIntensityChart from '../Common Components/BarChart';\r\n\r\nconst getFormattedData = (TestedPositiveData) => {\r\n    let stateNameArray = [], seriesData = [], categories = [], defaultStates = [], currentSeriesData = [];\r\n    let index = 0;\r\n    const {stateData} = {...TestedPositiveData.data}\r\n    stateData.forEach((item) => {\r\n        stateNameArray.push(item.stateName);\r\n        let testDataArray = [];\r\n        item.testData.forEach((item) => {\r\n            testDataArray.push(item.percPositive);\r\n            if (index === 0)\r\n                categories.push(item.startDate);\r\n        });\r\n\r\n        //Only 1st 5 states are used for showing default data\r\n        if (index < 5) {\r\n            defaultStates.push(item.stateName);\r\n            currentSeriesData.push({ name: item.stateName, data: testDataArray });\r\n        }\r\n\r\n        index += 1;\r\n        //mapping data wih state name so that it can be retrieved in O(1)\r\n        seriesData[item.stateName] = { name: item.stateName, data: testDataArray };\r\n    });\r\n    \r\n    return { stateNames: stateNameArray.sort(), seriesData, currentSeriesData, categories, defaultStates };\r\n}\r\n\r\nconst TrafficIntensityGraph = (props) => {\r\n    const { stateNames, seriesData, currentSeriesData, categories, defaultStates } = getFormattedData(props.data);\r\n    const [chartData, setChartData] = useState({ currentSeriesData });\r\n    const filterChartData = (selectedStateArray) => {\r\n        let filteredData = [];\r\n        for (let i = 0; i < selectedStateArray.length; i++) {\r\n            if (seriesData[selectedStateArray[i]]) {\r\n                filteredData.push(seriesData[selectedStateArray[i]]);\r\n            }\r\n        }\r\n        return filteredData;\r\n    }\r\n    const handleStateChange = (selectedStateArray) => {\r\n        console.log(selectedStateArray);\r\n        setChartData({ currentSeriesData: filterChartData(selectedStateArray) });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StateSelector defaultStates={defaultStates} states={stateNames} handleStateChange={(selectedStateArray) => handleStateChange(selectedStateArray)}></StateSelector>\r\n            <TrafficIntensityChart theme={props.theme} seriesData={chartData.currentSeriesData} categories={categories}></TrafficIntensityChart>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default TrafficIntensityGraph;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box, Typography, LinearProgress } from '@material-ui/core';\r\nimport DataTable from '../Common Components/DataTable';\r\nimport TestedPositiveGraph from './TestedPostiveGraph';\r\nimport { fetchTestedPositiveData } from '../../Api/ISI_StatisticalData';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`TestedPositive-tabpanel-${index}`}\r\n            aria-labelledby={`TestedPositive-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `TestedPositive-tab-${index}`,\r\n        'aria-controls': `TestedPositive-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: 20\r\n    },\r\n}));\r\n\r\nexport default function TestedPositive(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [testedPositiveData, setTestedPositiveData] = useState(null);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const responseData = await fetchTestedPositiveData();\r\n            if (!responseData || !responseData.data)\r\n                return;\r\n\r\n            setTestedPositiveData(responseData.data);\r\n\r\n        })();\r\n        return () => {\r\n            console.log(\"[Concentration] unmounted\");\r\n        };\r\n    }, []);\r\n    return (\r\n        testedPositiveData ?\r\n            <React.Fragment>\r\n                <Typography color=\"textSecondary\">{testedPositiveData.heading}</Typography>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs centered value={value} onChange={handleChange} aria-label=\"TestedPositive tabs\" variant=\"fullWidth\">\r\n                            <Tab label=\"Graph\" {...a11yProps(0)} />\r\n                            <Tab label=\"Analysis\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TestedPositiveGraph data={testedPositiveData} theme={props.theme}></TestedPositiveGraph>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <DataTable data={testedPositiveData.data} category=\"testData\" headerRange={true}\r\n                            headerCategory1=\"startDate\" headerCategory2=\"endDate\" itemCategory=\"percPositive\"></DataTable>\r\n                    </TabPanel>\r\n                </div>\r\n            </React.Fragment> : <LinearProgress color=\"secondary\" />\r\n    );\r\n}","import React from 'react';\r\nimport FAQData from './FAQData.json';\r\nimport { Paper, Typography, Divider, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport QuestionIcon from '@material-ui/icons/HelpOutline';\r\nimport AnswerIcon from '@material-ui/icons/ChevronRight';\r\nimport { green } from '@material-ui/core/colors';\r\nimport parse from 'html-react-parser';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: theme.spacing(1)\r\n    },\r\n    text: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    questionContainer: {\r\n        alignItems: 'center',\r\n        flexWrap:'noWrap'\r\n    },\r\n    answerContainer: {\r\n        marginTop: theme.spacing(1),\r\n        flexWrap:'noWrap'\r\n    }\r\n\r\n}));\r\n\r\nconst Faq = () => {\r\n    const classes = useStyles();\r\n    const { data } = { ...FAQData };\r\n    return (\r\n\r\n        data ? data.map((item, index) => (\r\n            <React.Fragment>\r\n                <Paper className={classes.paper}>\r\n                    <Grid container className={classes.questionContainer}>\r\n                        <QuestionIcon style={{ color: green[300] }} item></QuestionIcon>\r\n                        <Typography item variant=\"h6\" className={classes.text}>\r\n                            {item.question}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Divider></Divider>\r\n                    <Grid container className={classes.answerContainer}>\r\n                        <AnswerIcon style={{ color: '#66aaff' }} item></AnswerIcon>\r\n                        <Typography item variant=\"subtitle1\" className={classes.text} gutterBottom>\r\n                            {parse(item.answer)}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </React.Fragment>\r\n        )) : null\r\n\r\n    );\r\n}\r\n\r\nexport default Faq;","import React from 'react';\r\nimport { Avatar, Paper, Grid, Typography } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({    \r\n    container:{\r\n        maxWidth:500\r\n    },\r\n    paper: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary\r\n    },\r\n    center: {\r\n        alignSelf: 'center'\r\n    },\r\n    avatar: {\r\n        height: 60,\r\n        width: 60\r\n    },\r\n    rightContent: {\r\n        marginLeft: 15,\r\n        textAlign: 'left'\r\n    },\r\n    buttonContainer:{\r\n        marginLeft:-15\r\n    }\r\n}));\r\n\r\nconst openLink = (url) =>{\r\n    window.open(url, \"_blank\");\r\n}\r\nconst AboutCard = (props) => {\r\n    const classes = useStyles();\r\n    const {data} = {...props};    \r\n    return (<Grid item xs={12} md={6} className={classes.container}>\r\n        <Paper className={classes.paper}>\r\n            <Grid container style={{ flexWrap: 'noWrap' }}>\r\n                <Grid item root className={classes.center}>\r\n                    <Avatar className={classes.avatar} alt={data.name} src={data.avatar} />\r\n                </Grid>\r\n                <Grid item root className={classes.rightContent}>\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">{data.name}</Typography>\r\n                    <Typography color=\"textSecondary\">{data.currentRole}</Typography>\r\n                    <Grid className={classes.buttonContainer}>                        \r\n                        {data.linkedIn?\r\n                        <IconButton onClick={() => openLink(data.linkedIn)} aria-label=\"delete\">\r\n                            <LinkedInIcon />\r\n                        </IconButton>:null}\r\n                        {data.github ?\r\n                        <IconButton onClick={() => openLink(data.github)} aria-label=\"delete\">\r\n                            <GitHubIcon />\r\n                        </IconButton>:null}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    </Grid>);\r\n}\r\n\r\nexport default AboutCard;","import React from 'react';\r\nimport { Grid, Typography, Divider, Button, Paper,Link } from '@material-ui/core';\r\nimport Contributors from './Contributors.json';\r\nimport AboutCard from './AboutCard';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: 0\r\n        },\r\n        padding: theme.spacing(1)\r\n    },\r\n    subHeading: {\r\n        marginTop: 10\r\n    },\r\n    detailsContainer: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10\r\n    }\r\n\r\n}));\r\nconst handleGithubRedirect = () =>{\r\n    window.open(\"https://github.com/praty94/covid-app-isi\", \"_blank\");\r\n}\r\nconst AboutPage = () => {\r\n    const classes = useStyles();\r\n    const { contributors } = { ...Contributors };\r\n    return (\r\n        <div className={classes.container}>\r\n            <div>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">Analytics Team</Typography>\r\n                <Divider></Divider>\r\n                <div>\r\n                    {contributors.analytics && contributors.analytics.head ?\r\n                        <div>\r\n                            <Typography color=\"textSecondary\" className={classes.subHeading} gutterBottom>Head</Typography>\r\n                            <Grid container spacing={3}>\r\n                                <AboutCard data={contributors.analytics.head}></AboutCard>\r\n                            </Grid>\r\n                        </div> : null}\r\n                    {contributors.analytics && contributors.analytics.team ?\r\n                        <React.Fragment>\r\n                            <Typography color=\"textSecondary\" className={classes.subHeading} gutterBottom>Team</Typography>\r\n                            <Grid container spacing={3}>\r\n                                {contributors.analytics.team.map((item, index) => (\r\n                                    <AboutCard data={item} key={index}></AboutCard>\r\n                                ))}\r\n                            </Grid>\r\n                        </React.Fragment>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">Development Team</Typography>\r\n                <Divider></Divider>\r\n                <Grid container spacing={3} style={{ marginTop: 5 }}>\r\n                    {contributors.dev ?\r\n                        contributors.dev.map((item, index) => (\r\n                            <AboutCard data={item} key={index}></AboutCard>\r\n                        )) : null\r\n                    }\r\n                </Grid>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">Project Details</Typography>\r\n                <Divider></Divider>\r\n                <Paper className={classes.detailsContainer}>\r\n                    <Typography color=\"textPrimary\" gutterBottom>This project is open source. Anybody is free to use, study and modify it .</Typography>\r\n                    <Button variant=\"outlined\" size=\"large\" startIcon={<GitHubIcon />} onClick={()=>handleGithubRedirect()}>Github Repository</Button>\r\n                </Paper>\r\n                <Paper className={classes.detailsContainer}>\r\n                    <Typography color=\"textPrimary\" gutterBottom>API -&nbsp;\r\n                    <Link href=\"https://api.covid19india.org/\" target='_blank' color=\"secondary\">\r\n                        api.covid19india.org\r\n                    </Link>\r\n                    </Typography>\r\n                    <Typography color=\"textPrimary\" gutterBottom>Our team uses the data to provide more in depth analysis that we show in different parts of the application.</Typography>\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\nimport './App.css';\nimport { AppContextProvider } from './Context/AppContext';\nimport { AppShell } from './Components';\nfunction App() {\n  return (\n    <AppContextProvider>\n      <AppShell></AppShell>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}